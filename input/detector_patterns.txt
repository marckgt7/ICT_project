Detector: abbysale_abbysale_test.go
  validPattern: 123abcDEF456ghiJKL789mnoPQR012stuVWX3456
  invalidPattern: 123abcDEF456ghiJKL789mnoPQR012stuVWX

Detector: abstract_abstract_test.go
  validPattern: qwerty12345iugt67s7a7sa0akhsxz82
  invalidPattern: zxcvbr12345iugt67s7a7sa0akhsXz820

Detector: abuseipdb_abuseipdb_test.go
  validPattern: 123abcdef456ghijkl789mnopqr012stuvwx3455123abcdef456ghijkl789mnopqr012stuvwx3455
  invalidPattern: 123abcdef456Ghijkl789mnopqr012stuvwx3455123abcdef456ghijkl789mnopqr012stuvwX

Detector: accuweather_accuweather_test.go
  validPattern: dqftwc490oPc%xae67sBSF741M56%sd091a
  invalidPattern: dqftwc490oPc%xae67sBSF741M56=sd091a

Detector: adobeio_adobeio_test.go
  validPattern: zxcv0987mnbv1234poiu6749gtnrfv54/WDcv0981Mn.B
  invalidPattern: Rzxc#0987$%bv1234poiu6749gtnrfv54

Detector: adzuna_adzuna_test.go
  validPattern: asdf0987mnbv1234qsxojb6ygb2wsx0o/qsc0f098
  invalidPattern: as#f0987mnbv1234^sxojb6ygb2wsx0o/qsc0f098

Detector: aeroworkflow_aeroworkflow_test.go
  validPattern: qscVgy!WdvG;^#O:*?TG/806445634
  invalidPattern: qscVg&!WdvG;^#O:*?TG/8064456A4

Detector: agora_agora_test.go
  validPattern: asdf0987mNbv1234qsxojb6ygb2w$x0o/beqr7215fr4g6bfjkmnVxrtygb2wsxap
  invalidPattern: asdf0987mNbv1234qsxojb6ygb2w$x0o/beqr7215fr4g6bfjkmnVxrtygb2wsxap

Detector: aha_aha_test.go
  validPattern: 00112233445566778899aabbccddeeff00112233445566778899aabbccddeeff/example.aha.io
  invalidPattern: 00112233445566778899aabbCC$%eeff00112233445566778899aabbccddeeff/example.fake.io

Detector: airbrakeprojectkey_airbrakeprojectkey_test.go
  validPattern: qwmnerBv56zxpocvkjqr78afvYUx90Op/451298
  invalidPattern: qwmnerBv56zxpocvkjqr78afvYU$90Op/4512987

Detector: airbrakeuserkey_airbrakeuserkey_test.go
  validPattern: qsCGuilpkk2ngrsz75wtYqsCGuilpkk2ngrsz75w
  invalidPattern: Qs%CGuil#pkk2ngrsz75wtYqsCGuilpkk2ngrsz75w

Detector: airship_airship_test.go
  validPattern: 123abcdef456ghijkl789mnopqr012stuvwx3455123abcdef456ghijkl789mnopqr012stuvwx3455trdfrq95acr
  invalidPattern: 123#abcdef456gh$ijkl789mnopqr012stuvwX3455123abcdef456ghijkl789mnopqr012stuvwx3455trdfrq

Detector: airtableapikey_airtableapikey_test.go
  validPattern: app_pOcv67-Yuztyq / key_Yuztyq-pOcv67
  invalidPattern: app_pOcv67%Yuztyq/key_Yuztyq*pOcv67
  testPatterns:
    input: document.addEventListener('DOMContentLoaded', function () {
    base = new Airtable({ apiKey: 'patHSL6ZkPWx8Rkva.f0b2c1970c1cd8b5126d04eaf59d9fd500a39736c73bbb3a471fsf7eb3561ec0' }).base('appiiuioD2lBj2DaJ');

   reloadData();
    want: "app_pOcv67-Yuztyq:key_Yuztyq-pOcv67"

Detector: airvisual_airvisual_test.go
  validPattern: qscgyygcsq-wdvvok7slklklaasnd8afafxd
  invalidPattern: wdvvok7slklklaasnd8afafxd

Detector: aiven_aiven_test.go
  validPattern: ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef123/+==ABCdef12
  invalidPattern: ABCdef123

Detector: alchemy_alchemy_test.go
  testPatterns:
    input: alchemy_token = '3aBcDFE5678901234567890_1a2b3c4d'
    want: "3aBcDFE5678901234567890_1a2b3c4d"
    input: alchemy_token1 = '3aBcDFE5678901234567890_1a2b3c4d'
alchemy_token2 = '3aDcDFE56789012245678a0_1a2b3c2d'
    want: "3aBcDFE5678901234567890_1a2b3c4d", "3aDcDFE56789012245678a0_1a2b3c2d"
    input: alchemy_token = '1a2b3c4d'
    want: 

Detector: alconost_alconost_test.go
  validPattern: wdvnousa87acfxp9ioasrea4tbeasrfa
  invalidPattern: wdvnousa87acfxp9ioasr$a4tBeasrfa

Detector: alegra_alegra_test.go
  validPattern: wdvn-usa87a-fxp9ioas/testUser.1005@example.com
  invalidPattern: wdvn-usa87a-fxp9ioasQQsstestUsQQ@example

Detector: aletheiaapi_aletheiaapi_test.go
  validPattern: TEST01KEYPATTERN2024ALETHEIAAPIN
  invalidPattern: TEST01kEYPATTERN2024ALETHEIAAPIN

Detector: algoliaadminkey_algoliaadminkey_test.go
  validPattern: AlgoliaAdminKey010TESTINGPlmiOPC/ADMIN01KEY
  invalidPattern: AlgoliaAdminN$TKey010TESTINGPlmiOPC/NonAdmin01ID

Detector: alibaba_alibaba_test.go
  validPattern: abcDEF123ghiJKL456mnoPQR789std/LTAI123ABCdef456ghijkLMN
  invalidPattern: abcDEF123ghiJKL456m$oPQR789/123ABCdef456ghijkLMN;

Detector: alienvault_alienvault_test.go
  validPattern: a3b9f8c1e2d4f5b6c7d8e9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0
  invalidPattern: A$3b9f8c1e2d4f5b6c7d8e9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d

Detector: allsports_allsports_test.go
  validPattern: d1f2e3c4b5a6d7e8f9g0h1i2j3k4l5m6n7o8p9q0r1s2t3u4v5w6x7y8z9a0b1ce
  invalidPattern: Ad1f2e3c4b5a6d7e8f9g0h1i2j3k4l5m6n7o8p9q0r1sRt3u4v5w6x7y8z9a0b1cE

Detector: amadeus_amadeus_test.go
  validPattern: A1b2C3d4E5f6G7h8I9j0K1l2M3n4O5p6 / A1b2C3d4E5f6G7ho
  invalidPattern: A1b2$3d4E5f6G7h8I9j(K1l2M3n4O5)6 / A1b2C3d4E^f6G7#8

Detector: ambee_ambee_test.go
  validPattern: a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4
  invalidPattern: X3b4c5d6e7f8a9b0c1d2e3f4a5b6c7Z8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4

Detector: amplitudeapikey_amplitudeapikey_test.go
  validPattern: amplitude key = 1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d
	amplitude secret = 5b3c4d5e5f7a8b9c0d1e2f2f3a4b4c6e
  invalidPattern: amplitude key = 1a2b3c4d5e6f7a8g9c0d1e2f3a4b5c6d
	amplitude secret = 5b3c4d5e5f7a8b9c0d1r2f2f3a4b4c6e

Detector: anthropic_anthropic_test.go
  validPattern: sk-ant-api03-abc123xyz-456def789ghij-klmnopqrstuvwx-3456yza789bcde-1234fghijklmnopby56aaaogaopaaaabc123xyzAA
  invalidPattern: sk-ant-api03-abc123xyz-456de-klMnopqrstuvwx-3456yza789bcde-1234fghijklmnopAA

Detector: anypoint_anypoint_test.go
  validPattern: 1a2b3c4d-5e6f-7g8h-9i0j-k1l2m3n4o5p6 / org: abcd1234-ef56-gh78-ij90-klmn1234opqr
  invalidPattern: 1a2b3C4d-5E6f-7g8H-9i0J-k1l2M3n4o5p6 / abcd1234-eF56-gH78-ij90-klmn1234opqr

Detector: apacta_apacta_test.go
  validPattern: abcd1234-ef56-gh78-ij90-klmn1234opqr
  invalidPattern: abcD$1234-ef56-gH78-ij90-klmn1234opqr

Detector: api2cart_api2cart_test.go
  validPattern: 0123456789abcdef0123456789abcdef
  invalidPattern: 0123456789Gbcde^0123456789abcdef

Detector: apiflash_apiflash_test.go
  validPattern: apiflash_key: a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6
	apiflash_url: abc123XYZ456def789ghijklm
  invalidPattern: 0123456789Gbcde^0123456789abcdef

Detector: apifonica_apifonica_test.go
  validPattern: abc123def45-gh67-ij89-kl01-mn234op56789
  invalidPattern: 0123456789Gbcde^0123456789abcdef

Detector: apify_apify_test.go
  validPattern: apify_api_ab12CD34ef56GH78ij90KL12mn34OP56qr78
  invalidPattern: apify_api_ab12C#34ef56GH7$ij90KL12mn34OP56qr7)

Detector: apilayer_apilayer_test.go
  validPattern: apilayerkey: abcdef1234567890abcdef1234567890
  invalidPattern: apilayerkey: abcdef123$5678*0abcde()1234567890)

Detector: apimatic_apimatic_test.go
  validPattern: func validateApiMatic() bool {
		apiMaticKey := "rc6iLoUEFGGAWNLsuBJnmsh4tZB-oCxcDUmc45HIPcuiQvfUEuqo8wb9YrUd2LyB"

		return isActive(apiMaticKey, apiMaticPass)
	}
  invalidPattern: apiMaticKey: rc6iL$UEFGGAWNLsuBJnmsh4tZB)oCxcDUmc45HIPcuiQvfUEuqo8wb9YrUd2LyB

Detector: apimetrics_apimetrics_test.go
  validPattern: apimetricskey: 5po8TFGawiYNCc1ct4ofWkBqzIfA6IeO
  invalidPattern: apimetricskey: A1b2C3d4 E5f6G7h8I9 j0K1l2M3n4O5p6

Detector: apitemplate_apitemplate_test.go
  validPattern: apitemplatekey: a1B2c3D4e5F6g7H8i9J0k1L2m3N4o5P6q7R8s9T
  invalidPattern: apitemplatekey: sk_0C2c3D4e5F6@7H8i9J$k1L2m3N4o5P6q7R8s9T

Detector: apollo_apollo_test.go
  validPattern: apollo: A1b2C3d4E5f6G7h8I9j0K1
  invalidPattern: apollo: A1b2C3d4-5f6G7h8I9j0K1@$

Detector: appcues_appcues_test.go
  validPattern: appcues abcdef12-3456-7890-1234-56789abcdef0 
		appcues abcdef123456789012345678901234567890123 
		appcues 12345
  invalidPattern: appcues abcdef12#3456-7890-1234-56789abcdef0 
		appcues abcdef12345678901&345678901234567890123 
		appcues 123456

Detector: appfollow_appfollow_test.go
  validPattern: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.333HbjEo1oxVUFcASR0sQ8cMuIJRLcMd5H9iJWDbovCw6ESjNtuoEMQQGPN9aSoxponxrTPvn1.btADhgNetsaUBuwoyHo5ip0Jab6N6MEBnSaT6CHiO6z
  invalidPattern: eyQ0eXAiOiJMM1QiLDJhbGciOiJIUXI1NiK7.abcdefgh1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcd1234efgh5678ijkl9012.qwerty12345-ASDFG67890_zxcvb_ABCDE

Detector: appointedd_appointedd_test.go
  validPattern: Ci0a2bSpRyFcZyEXBEr9RHzf3xXllqO=XVoh+t0L0s8T2s3MFntfWhBlovqLaqEadtuJ9=Jy6yCOXmhbpEZPfY7Y
  invalidPattern: Ci0a2bSpRyFcZyEXBEr9RHzf3xXllqO^XVoh+t0L0s8T2s3MFntfWhBlovqLaqEadtuJ9$Jy6yCOXmhbpEZPfY7Y

Detector: appoptics_appoptics_test.go
  validPattern: IABJPR08RmvsGrebJhr1TUdo27-KtTn0mLCKkJJqj5lyba-otXPklygO9DK62o3QSPoIJ4E
  invalidPattern: IABJPR08Rmvs.GrebJhr1TUdo27_KtTn0mLCKkJJqj5lyba&otXPklygO9DK62o3QSPoIJ4E

Detector: appsynergy_appsynergy_test.go
  validPattern: mg1pgwlndtq7rbk8i3kum344aso8ggp02ximdhsp8nsqasd3btxf84lz9ekfdpwo
  invalidPattern: mG1pgwlndtq7rbk8i3kum344a$o8gGp02ximdhsp8nsqasd3btxf84lz9ekfdpwo

Detector: apptivo_apptivo_test.go
  validPattern: apptivokey: 1h3l8yjo3pms2h738k8f9094rkltmgy8md-4 - apptivoID: wV2WGN-KUxROVW0mlq8kur7TbKvCTdNc
  invalidPattern: apptivokey: 1h3l8yjo3pms2h738k8f9094rkltmgy8md-4

Detector: artifactory_artifactory_test.go
  validPattern: 5YcZhIKwxTdxwpZHf9c1Usu8xNtAklRsqWYXWf2qmjW0RSQQ0U4sVnrNgOwIJlTOqJf06T3dl / RVo8ytzB65L.jfrog.io
  invalidPattern: W0RSQQ0U4sVnrNgOwIJlTOqJf06T3dl^&5YcZhIKwxTdxwpZHf9c1Usu8xNtA / rtest#y$zB65L%.jfrog.io

Detector: artsy_artsy_test.go
  validPattern: artsy_key: rU0K6hwGw9AeANtXrZ8FQJT9jn4sRdlj - artsy_id: hvQ2fMvUPNczDCdmzi0i
  invalidPattern: artsy_key: rU:K6hwGw9AeANtXrZ8F%JT9jn4sR,lj - artsy_id: hvQ2f-vUPNczD+dmzi0i

Detector: asanaoauth_asanaoauth_test.go
  validPattern: asana_key: v1e0uwkmv2ykvsu998lqe4g7ij2gwtg/xn9vh4jvsokdfaic0bn
  invalidPattern: asana_key: v1e0uwkmv2ykvsu998lqe4g-ij2gwtg/xn9vh4jvsokdfaic0bn

Detector: asanapersonalaccesstoken_asanapersonalaccesstoken_test.go
  validPattern: asana_token: 594776654034514343561917591881414702593902454625364993/1724908107002616220416212965:Yv3DoiSFhtsgUwN3AcnXWjK8zabQHKSHBRHpuNKVjz3oCcpyDIdXRm3GL4SUDkTMFoTbRDCHe8tTBHxdtoXItn
  invalidPattern: asana_token: 1724908107002616220416212965%594776654034514343561917591881414702593902454625364993:Yv3DoiSFhtsgUwN3AcnXWjK8zabQHKSHBRHpuNKVjz3oCcpyDIdXRm3GL4SUDkTMFoTbRDCHe8tTBHxdtoXItn-ij2gwtg/xn9vh4jvsokdfaic0bn

Detector: assemblyai_assemblyai_test.go
  validPattern: assemblyai: mlhekyjhs96mx0r2cxbzky4jzr83fw1q
  invalidPattern: assemblyai: Mlhekyjzr83fw1qr2cxbzky4jzr83f1q

Detector: atera_atera_test.go
  validPattern: atera_key: yoo3d5pu3t4zxd6x1vhk7ykmjqarbsv1
  invalidPattern: atera_key: yOO3d5pu3t4zxd6x1vhk7ykmjqarbs_1

Detector: atlassian_v1_atlassian_test.go
  testPatterns:
    input: atlassian = 'aB1cD2eF3gH4iJ5kL6mN7oP8'
    want: "aB1cD2eF3gH4iJ5kL6mN7oP8"

Detector: atlassian_v2_atlassian_test.go
  testPatterns:
    input: atlassian = 'ATCTT3xFfGN0GsZNgOGrQSHSnxiJVi00oHlRicyM0yMNuKCBfw6qOHVcCy4Hm89GnclGb_W-1qAkxqCn5XbuyoX54bNhpK5yFKGFR7ocV6FByvL_P9Sb3tFnbUg3T3I3S_RGCBLMSN7Nsa4GJv8JEJ6bzvDmX-oJ8AnrazMU-zZ5hb-u3t2ERew=366BFE3A'
    want: "ATCTT3xFfGN0GsZNgOGrQSHSnxiJVi00oHlRicyM0yMNuKCBfw6qOHVcCy4Hm89GnclGb_W-1qAkxqCn5XbuyoX54bNhpK5yFKGFR7ocV6FByvL_P9Sb3tFnbUg3T3I3S_RGCBLMSN7Nsa4GJv8JEJ6bzvDmX-oJ8AnrazMU-zZ5hb-u3t2ERew=366BFE3A"

Detector: audd_audd_test.go
  validPattern: audd_key: 60fzzcspq2balbxn7f3hi2nvg3h07h4z
  invalidPattern: audd_key: 60fuzcsoq2balxbN7f3hi2nvg3h07h4z

Detector: auth0managementapitoken_auth0managementapitoken_test.go
  validPattern: auth0_credentials:
			apiToken: eywT2nGMZwOcbsUVBwfiRPEl8P_wnmo6XfdUoGVwxDfOSjNyqhYqFdi.KojZZOM8Ox
			domain: QHHPu7VPj.sI.auth0.com
  invalidPattern: auth0_credentials:
			apiToken: eywT2nGMZwOcbsUVBwfiRPEl8P_wnmo6XfdUoGVwxDfOSjNyqhYqFdi.KojZZOM8Ox
			domain: QHHPu7VPj.sI.auth0.com

Detector: auth0oauth_auth0oauth_test.go
  validPattern: auth0_credentials file: 
		auth0_clientID: kYWr_tL4eYBtqIIvKfSf2-e4T9Cw1CtwE8ufoESVBB7Hi1U
		secret: rXwGtKCleBsaUfpchggQEAy_yhzWnqv4_GzJivBif85bqiJi3ZA63DAauoJ2PF27fvS-MBqIYgxH0vZaL1s5314lgPDLqHXjZsY59PSew63A_L6rySqcy5J3rFcGcpdeSQ_tTx1kCXOZY_JUy 
		domain: 9-KhTIdSopSaMQ2v1YxdFEJN-HNgt7Mn7E8xkfQNqd51AzSGQu2yRaFauth0.com
  invalidPattern: auth0_credentials file: 
		auth0_clientID: e4T9Cw1CtwE8ufoESVBB7Hi1U-e4T9Cw1CtwE8ufoESVBB7Hi1U
		secret: MBqIYgxH0vZaL1s5314lgPDLqHX^ZsY59PSew63A_L6rySqcy5J3rFcGcpdeSQ_+tTx1kCXOZY_JUy-rXwGtKCleBsaUfpchggQEAy_yhzWnqv4_GzJivBif85bqiJi3ZA63DAauoJ2PF27fvS 
		domain: 9-KhTIdSopSaMQ2v1YxdFEJN#qd51AzSGQu2yRaFauth1.com

Detector: autodesk_autodesk_test.go
  validPattern: autodesk_key: 2j8Rl67MjoMruYfyIBgGzy2pxcxIQfet / autodesk_secret rHfzZhsSRruLM3Fn
  invalidPattern: autodesk: 2mm8Rl67MjoMruYfyIBg5#zy2pxcxIQfet / autodesk_secret RHGklpa

Detector: autoklose_autoklose_test.go
  validPattern: autoklose credentials: KRXaU9GK3f9yHG1FS-mbwhsIXdW22epH
  invalidPattern: autoklose credentials: KRXaU9GK3f[yHG1FS$]bwhsIXdW22epH

Detector: autopilot_autopilot_test.go
  validPattern: autopilot credentials: 0fd87cfb1ca6c38c5f1ae5be7b0e395e
  invalidPattern: autopilot credentials: KRXaU9GK3f[yHG1FS$]bwhsIXdW22epH

Detector: avazapersonalaccesstoken_avazapersonalaccesstoken_test.go
  validPattern: avaza credentials: 01818612883613176996369293-f113ceb9cf4fa63dc367ab4815b0e1edf890745f
  invalidPattern: avaza credentials: 01818612883613176996369293-fzz3ceb0mf4fp63dh367xb4815b0e1edf890745f

Detector: aviationstack_aviationstack_test.go
  validPattern: aviationstack credentials: osh0kjinsc2atoaqntoy1hdjppg54449
  invalidPattern: aviationstack credentials: OSh0lMjinsc2atoaqnto[]1hdjppg5449

Detector: aws_access_keys_accesskey_test.go
  validPattern: aws credentials{
			id: ABIAS9L8MS5IPHTZPPUQ
			secret: .v2QPKHl7LcdVYsjaR4LgQiZ1zw3MAnMyiondXC63;
		}
  invalidPattern: aws credentials{
			id: AKIAs9L8MS5iPHTZPPUQ
			secret: $YenOG.PKHl7LcdVYsjaR4LgQiZ1zw3MAnMyiondXC63;
		}

Detector: aws_session_keys_sessionkeys_test.go
  validPattern: aws credentials{
			id: ASIABBKK02W42Q3IPSPG
			secret: fkhIiUwQY32Zu9e4a86g9r3WpTzfE1aXljVcgn8O
			session: >aSqfp/GTZbJP+=tXPNCZ9GoveoM0vgxtlYXdzPQ2uYNMPPgUkt0VT7SoTLasAo7iVqWWREOUC6DEenlcgDEKyzIEgQ=W5Ju/b9K/Z176uD2HJYCfq/lyowHtt5PvJi7LR=uf/urSorGbTcqNUvP=i42YP1Ps/4F6He9hQA1io3EAGBC3ICGHXWf2IlvFoTNUyPTqhjnPEKMWZ42jblqNA=dD7hLpzNXmmGhdLCjy99XK8+gjHdZHkOeD/FIjRPRZ7Jl0tdwdqFEwzRVCzL2uelMVMd3UaZ+d4I4Kf+J464piO//jxx48Fs/mG3zr5ba9m2S+6gvUZJq4j+0uJ+jf6cG/x2G9XSybqYQRwvxfNquKB4TcKiGVH5+ZbJT4ASkARadwoSPMGfvMPje+X2zAziSzXfsxYfIQKf6iJ9p7VavlDGi+Acr4kwFXW5IfQs4uGk6AVQFsoZK3o1hhLOkuOwWQEWhDQGNLXwJbFqXfELOnUQvM0Z5NUm46bjAAi4g+X9gLPNR/KjzXuuTTaWYrQEjXLb7PxS0sIttAb1w+sTXXtc1kDIsABC6KcsyGlEwji5sLkbkUa~
		}
  invalidPattern: aws credentials{
			id: ASIABBKK02W42Q3IPSPG
			secret: $YenOG.PKHl7LcdVYsjaR4LgQiZ1zw3MAnMyiondXC63;
		}

Detector: axonaut_axonaut_test.go
  validPattern: axonaut credentials{
			key: 4ve4aj6v38uiadaq9hcgpupp2b3lh2k8
		}
  invalidPattern: axonaut credentials{
			key: ASIABBKK02W42Q3IPSPG
		}

Detector: aylien_aylien_test.go
  validPattern: aylien credentials:
		aylien key: cr479du2l9pkmhar8gw5hufofvwp86q9
		aylien id: y3ejw028
  invalidPattern: aylien credentials:
		aylien key: cr4U9du2l9pkmhar8gw5hufofvWp86q9
		aylien id: y3ejwA8

Detector: ayrshare_ayrshare_test.go
  validPattern: ayrshare credentials: 2FTJTA1C-BXO0DV4J-HGTP9E62-QHQSILY1
  invalidPattern: ayrshare credentials: KRXaU9GK3f[yHG1FS$]bwhsIXdW22epH

Detector: azurecontainerregistry_azurecontainerregistry_test.go
  validPattern: azure:
		url: http://invalid.azurecr.io.azure.com
		secret: BXIMbhBlC3=5hIbqCEKvq7op!V2ZfO0XWbcnasZmPm/AJfQqdcnt/+2Ytxc1hDq1m/
  invalidPattern: azure:
		url: http://invalid.azurecr.io.azure.com
		secret: BXIMbhBlC3=5hIbqCEKvq7op!V2ZfO0XWbcnasZmPm/AJfQqdcnt/+2Ytxc1hDq1m/
  testPatterns:
    input: source storage.env

ACR=smpldev.azurecr.io
ACRUSER=smpldev
ACRPWD=Cw8xeDNK6Bub3p61aq5ij/TiVvtBicpTj5rverVezj+ACRBPkEcx
CONTAINER=storage-svc:latest
    want: `{"username":"smpldev","password":"Cw8xeDNK6Bub3p61aq5ij/TiVvtBicpTj5rverVezj+ACRBPkEcx"
    input: - name: Deploy to ARC
      uses: azure/docker-login@v1
      with:
            login-server: crmshopacr.azurecr.io
            username: crmshopacr
            password: o9uXSjWlUdRwAeGP2xGSfGy+25vetsONo3Mq13fksa+ACRBXyFsY
    - run: |
    want: `{"username":"crmshopacr","password":"o9uXSjWlUdRwAeGP2xGSfGy+25vetsONo3Mq13fksa+ACRBXyFsY"
    input: docker login dvacr00.azurecr.io -u dvacr00 -p Ljc+1lq0U0+c3jHlMHxSxAhCipKt6zU43HfMle/Ymj+ACRAKcPHy
docker push dvacr00.azurecr.io/foo-alpine:3.18
    want: `{"username":"dvacr00","password":"Ljc+1lq0U0+c3jHlMHxSxAhCipKt6zU43HfMle/Ymj+ACRAKcPHy"
    input: 
    want: `{"username":"cr2bxwtqgom2oo","password":"VP2rvkuld42mr3jNjM+rVbvIzVuZxwncKWyVU5UIad+ACRBivL0B"
    input: # AZURE-CICD-Deployment-with-Github-Actions

## Save pass:

s3cEZKH3yytiVnJ3h+eI3qhhzf9l1vNwEi1+q+WGdd+ACRCZ7JD6


## Run from terminal:

docker build -t testapp.azurecr.io/chicken:latest .
    want: `{"username":"testapp","password":"s3cEZKH3yytiVnJ3h+eI3qhhzf9l1vNwEi1+q+WGdd+ACRCZ7JD6"
    input: az acr login --name tstcopilotacr --username tstcopilotacr --password 9iZkJiOTKeEsQDfgoobtCYU47EEDs9UvU4L8NErLV+ACRACptmc
    want: 
    input: 
    want: 

Detector: azuredevopspersonalaccesstoken_azuredevopspersonalaccesstoken_test.go
  validPattern: azure:
		azure_key: uie5tff7m5h5lqnqjhaltetqli90a08p6dhv9rn59uo30jgzw8un
		azure_org_id: WOkQXnjSxCyioEJRa8R6J39cN4Xfyy8CWl1BZksHYsevxVBFzG
  invalidPattern: azure:
		azure_key: uie5tff7m5H5lqnqjhaltetqli90a08p6dhv9rn59uo30jgzw8un
		azure_org_id: LOKi

Detector: azurefunctionkey_azurefunctionkey_test.go
  validPattern: azure:
		azureURL: https://z1dUSi5T.azurewebsites.net/api/W8anB5J4uQi-v3Dcd6p7ySE0E
		azureFunctionkey: B8sm0KyfL1y8vPH3IDTdefevHBCGK33-=
  invalidPattern: azure:
		azureURL: http://invalid.azurecr.io.azure.com
		azureFunctionkey: BXIMbhBlC3=5hIbqCEKvq7op!V2ZfO0XWbcnasZmPm/AJfQqdcnt/+2Ytxc1hDq1m/

Detector: azuresearchadminkey_azuresearchadminkey_test.go
  validPattern: azure:
		azureKey: wRRPyhjv8m6JGRujUUrPKa8d3rJ0mrGAxhmqf3A68OgZmlWUJyma
		azureService: TestingService01
  invalidPattern: azure:
		Key: wRRPyhjv8m6JGRujUUr-PK#a8d3rJ0mrGAxhmqf3A68OgZmlWUJyma
		Service: TS01

Detector: azuresearchquerykey_azuresearchquerykey_test.go
  validPattern: azure:
		azure_url: https://tzyexx2ktdfhha8w1cktqzbrgv37ywtu.search.windows.net/indexes/n81wg81jogjfq93cyxfi67vy2g7vwlcqfgi
		azure_key: OKalbM5EBt5hloqU46phTUCZqvNAlZ4S2Jd2gFUCOQ3HG0vQ2uEp
  invalidPattern: azure:
		url: http://invalid.azurecr.io.azure.com
		azure_key: BXIMbhBlC3=5hIbqCEKvq7op!V2ZfO0XWbcnasZmPm/AJfQqdcnt/+2Ytxc1hDq1m/

Detector: azure_batch_azurebatch_test.go
  validPattern: azure batch:
		url: https://JrxlYxT+0hW.YSA.batch.azure.com
		secret: BXIMbhBlC3=5hIbqCEKvq7opaV2ZfO0XWbcnasZmPm/AJfQqdcnt/AVmKkJ8Qw80Zc1rQDaw+2Ytxc1hDq1m/LB0
  invalidPattern: azure batch:
		url: http://invalid.this.batch.azure.com
		secret: BXIMbhBlC3=5hIbqCEKvq7op!V2ZfO0XWbcnasZmPm/AJfQqdcnt/AVmKkJ8Qw80Zc1rQDaw+2Ytxc1hDq1m/

Detector: azure_entra_serviceprincipal_v1_spv1_test.go
  validPattern: azure credentials:
		azureClientID: clientid9304d5df4-aac1-6117-552c-7f70c89a40d9
		azureTenant: tenant_idid9304d5df4-aac1-6117-552c-7f70c89a40d9
		azureClientSecret: clientsecretY_0w|[cGpan41k6ng.ol414sp4ccw2v_rkfmbs537i
  invalidPattern: azure credentials:
		azureClientID: 9304d5df4-aac1-6117-552c-7f70c89a
		azureTenant: id9304d5df4-aac1-6117-55-7f70c89a40d9
		azureClientSecret: Y_0w|[cGpan41k6ng.

Detector: azure_openai_azure_openai_test.go
  testPatterns:
    input: export OPENAI_API_VERSION=2023-07-15-preview
export OPENAI_API_TYPE=AZURE
export OPENAI_API_BASE=https://james-test-gpt4.openai.azure.com/
export OPENAI_API_KEY=3397348fcdcb4a5fbeb6cceb5a6a284f
    want: "3397348fcdcb4a5fbeb6cceb5a6a284f"
    input: # {'input': ['This is a test query.'], 'engine': 'text-embedding-ada-002'}
# url /openai/deployments/text-embedding-ada-002/embeddings?api-version=2022-12-01
# params {'input': ['This is a test query.'], 'encoding_format': 'base64'}
# headers None
# message='Request to OpenAI API' method=post path=https://notebook-openai01.openai.azure.com/openai/deployments/text-embedding-ada-002/embeddings?api-version=2022-12-01
# api_version=2022-12-01 data='{
    want: "49eb7c2d3acd41f4ac31fef59ceacbba"
    input: import openai

openai.api_key = '1bb7dff73fe449de829363ea03bab134'
openai.api_base =
    want: "1bb7dff73fe449de829363ea03bab134"
    input: os.environ[
    want: "1bb7dde73fe449de229361ea03bab234"
    input: import OpenAI from
    want: "3375e3ad9a874cd6bd954b6f163be84f"
    input: {
    want: "57d2de35873840b5ad59d742e90e974e"

Detector: azure_storage_storage_test.go
  testPatterns:
    input: DefaultEndpointsProtocol=https;AccountName=storagetest123;AccountKey=YutGV0Vlauqsobd5tPWz2AKwHhBXMEWsAH+rSbz0UZUfaMVj1CFrcNQK47ygmrC4vHmc7eOp1LdM+AStk5mMyA==;EndpointSuffix=core.windows.net
    want: `{"accountName":"storagetest123","accountKey":"YutGV0Vlauqsobd5tPWz2AKwHhBXMEWsAH+rSbz0UZUfaMVj1CFrcNQK47ygmrC4vHmc7eOp1LdM+AStk5mMyA=="
    input: EndpointSuffix=core.windows.net;AccountKey=ldlKgoKPJhRjPJTkaC5c/QNqtu4sVQRc/teGJ0MZHbDYEHdvBV5z8JEfJK+evE87D7U8TzMZ0G2C+ASt2B4ifg==;AccountName=storagetest123;DefaultEndpointsProtocol=http
    want: `{"accountName":"storagetest123","accountKey":"ldlKgoKPJhRjPJTkaC5c/QNqtu4sVQRc/teGJ0MZHbDYEHdvBV5z8JEfJK+evE87D7U8TzMZ0G2C+ASt2B4ifg=="
    input: public const string SharedStorageKey =
    want: `{"accountName":"huntappstorage","accountKey":"rrttFty/b52ET/e8VqpMSN+ZqAUP7hcXVkdekrPX58gsMZyOCrE+igN07t3lyi7tAV0+OrJFBaDtMe06YJ2tFw=="
    input: export const DevelopmentConnectionString = 'DefaultEndpointsProtocol=http;AccountName=macdemostorage;
			AccountKey=Jby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;
			QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1;';
    want: `{"accountName":"macdemostorage","accountKey":"Jby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw=="
    input: static const std::string AzuriteAccountName{
    want: `{"accountName":"storagetest123","accountKey":"qYaZm3m8+Z2aYAiSDzzvStkTUgZXl29U76lDJ0qiob7bbV4g7kjtwO+FI2QoptGdZgEdtsAYzG8T0hl5TeftWA=="
    input: _ctx = InitializeConfigAndCreateTestBlobs(ctx,
    want: `{"accountName":"k21storagemedia","accountKey":"DFdukxfl0SwO4NB91bi/FTPh9BMEKr6Z5wWf+tGDfXMakXvGVp/NDzAUjWc/9171OqoDvXSj1o8N+AStUk1GXg=="
    input: public class Program
{
    private const string blobServiceEndpoint =
    want: `{"accountName":"storagetest123","accountKey":"qYaZm3m8+Z2aYAiSDzzvStkTUgZXl29U76lDJ0qiob7bbV4g7kjtwO+FI2QoptGdZgEdtsAYzG8T0hl5TeftWA=="
    input: public class AzuriteContainer extends GenericContainer<AzuriteContainer> {
    public static final String DEFAULT_ACCOUNT_NAME =
    want: `{"accountName":"storagetest123","accountKey":"KWPLd0rpW2T0U7K2pVpF8rYr1BgYtR7wYQk33AYiXeUoquiaY6o0TWqduxmPHlqeCNZ3LU0DHptbeIHy5l/Yhg=="
    input: var parsedConnectionString = ServiceSettings.parseAndValidateKeys(defaultConnectionString + endpointsConnectionString, validKeys);
    assert.equal(parsedConnectionString['DefaultEndpointsProtocol'], 'https');
    assert.equal(parsedConnectionString['AccountName'], 'storagetest123');
    assert.equal(parsedConnectionString['AccountKey'], 'KWPLd0rpW2T0U7K2pVpF8rYr1BgYtR7wYQk33AYiXeUoquiaY6o0TWqduxmPHlqeCNZ3LU0DHptbeIHy5l/Yhg==');
    assert.equal(parsedConnectionString['BlobEndpoint'], 'myBlobEndpoint');
    assert.equal(parsedConnectionString['QueueEndpoint'], 'myQueueEndpoint');
    assert.equal(parsedConnectionString['TableEndpoint'], 'myTableEndpoint');
    want: `{"accountName":"storagetest123","accountKey":"qYaZm3m8+Z2aYAiSDzzvStkTUgZXl29U76lDJ0qiob7bbV4g7kjtwO+FI2QoptGdZgEdtsAYzG8T0hl5TeftWA=="
    input: 'arguments' => [
			'container' => 'test',
			'account_name' => 'storagetest123',
			'account_key' => 'qYaZm3m8+Z2aYAiSDzzvStkTUgZXl29U76lDJ0qiob7bbV4g7kjtwO+FI2QoptGdZgEdtsAYzG8T0hl5TeftWA==',
			'endpoint' => 'http://' . (getenv('DRONE') === 'true' ? 'azurite' : 'localhost') . ':10000/devstoreaccount1',
			'autocreate' => true
		]
    want: `{"accountName":"storagename123","accountKey":"C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw=="
    input: export const name =
  process.env.ACCOUNT_NAME ||
    want: `{"accountName":"storagetest123","accountKey":"qYaZm3m8+Z2aYAiSDzzvStkTUgZXl29U76lDJ0qiob7bbV4g7kjtwO+FI2QoptGdZgEdtsAYzG8T0hl5TeftWA=="
    input: 
    want: `{"accountName":"storagetest123","accountKey":"qYaZm3m8+Z2aYAiSDzzvStkTUgZXl29U76lDJ0qiob7bbV4g7kjtwO+FI2QoptGdZgEdtsAYzG8T0hl5TeftWA=="
    input: <azure_conf2>
            <account_name>storagetest123</account_name>
            <account_key>qYaZm3m8+Z2aYAiSDzzvStkTUgZXl29U76lDJ0qiob7bbV4g7kjtwO+FI2QoptGdZgEdtsAYzG8T0hl5TeftWA==</account_key>
        </azure_conf2>
    want: `{"accountName":"mystorage","accountKey":"fNH9cRp0+qVIVYZ+5rnZAhHc9ycOUcJnHtzpfOr0W0sxrtL2KVLuMe1xDfLwmfed+JJInZaEdWVCPHD4d/oqeA=="
    input: azurefs:
      - account_name: mystorage
        account_key: 'fNH9cRp0+qVIVYZ+5rnZAhHc9ycOUcJnHtzpfOr0W0sxrtL2KVLuMe1xDfLwmfed+JJInZaEdWVCPHD4d/oqeA=='
        container_name: my_container
        proxy: 10.10.10.10:8080
    want: `{"accountName":"newstore100033323","accountKey":"Ar4/2iY8L0rEMeQaijINnfaMJr7vqjfbPgmJayw6Pu5l9ZI+GrFDm1uIWOqXk5RQLrTiXfBwWY6hAbPEIQqy1g=="
    input: - name: filesharevolume
    azureFile:
      sharename: containershare
      storageAccountName: newstore100033323
      storageAccountKey: Ar4/2iY8L0rEMeQaijINnfaMJr7vqjfbPgmJayw6Pu5l9ZI+GrFDm1uIWOqXk5RQLrTiXfBwWY6hAbPEIQqy1g==
    want: `{"accountName":"k8stest","accountKey":"xIF1zJbnnojFLMSkBp50mx02rHsMK2sjU7mFt4L13hoB7drAaJ8jD6+A443jJogV7y2FUOhQCWPmM6YaNHy7qg=="
    input: apiVersion: v1
		kind: Secret
		metadata:
		 name: azure-secret
		type: Opaque
		data:
		 azurestorageaccountname: k8stest
		 azurestorageaccountkey: xIF1zJbnnojFLMSkBp50mx02rHsMK2sjU7mFt4L13hoB7drAaJ8jD6+A443jJogV7y2FUOhQCWPmM6YaNHy7qg==
    want: `{"accountName":"storagetest123","accountKey":"hGeB3WqDyx0mGsQMsQDl+gmnXa51ZODiBtcXJpMoRhPjkDm79f9ErNfaYizXm7nkElix8n2uBwNk6KY8Rc866w=="
    input: 
    want: `{"accountName":"storageaccount","accountKey":"hGeB3WqDyx0mGsQMsQDl+gmnXa51ZODiBtcXJpMoRhPjkDm79f9ErNfaYizXm7nkElix8n2uBwNk6KY8Rc866w=="
    input: go run .\main.go -debug -dest=
    want: `{"accountName":"storagetest123","accountKey":"hGeB3WqDyx0mGsQMsQDl+gmnXa51ZODiBtcXJpMoRhPjkDm79f9ErNfaYizXm7nkElix8n2uBwNk6KY8Rc866w=="
    input: AzureStorageCleanup.exe 
    -storagename storageaccount
    -storagekey hGeB3WqDyx0mGsQMsQDl+gmnXa51ZODiBtcXJpMoRhPjkDm79f9ErNfaYizXm7nkElix8n2uBwNk6KY8Rc866w==
    -container sqlbackup
    -mindaysold 60
    -searchpattern .*
    -recursive
    -whatif
    want: `{"accountName":"storagetest123","accountKey":"qYaZm3m8+Z2aYAiSDzzvStkTUgZXl29U76lDJ0qiob7bbV4g7kjtwO+FI2QoptGdZgEdtsAYzG8T0hl5TeftWA=="
    input: $ bin/spark-submit --master \
    k8s://test-cluster.eastus2.cloudapp.azure.com:443 \
    --deploy-mode cluster \
    --name copyLocations \
    --class io.timpark.CopyData \
    --conf spark.copydata.containerpath=wasb://containers@storagetest123.blob.core.windows.net \
    --conf spark.copydata.storageaccount=storagetest123 \
    --conf spark.copydata.storageaccountkey=hGeB3WqDyx0mGsQMsQDl+gmnXa51ZODiBtcXJpMoRhPjkDm79f9ErNfaYizXm7nkElix8n2uBwNk6KY8Rc866w== \
    want: `{"accountName":"dashstorage3","accountKey":"TP+G/9FTZRP1he1EpKilMercxSbMyqtaI9xTbc/3HqT2/FkxyIk1wVlBdemDFuYKStmlkFqHc7049l8McTd8NQ=="
    input: driver := ArtifactDriver{
		AccountName:
    want: `{"accountName":"kubecostexport","accountKey":"TP+G/9FTZRP1he1EpKilMercxSbMyqtaI9xTbc/3HqT2/FkxyIk1wVlBdemDFuYKStmlkFqHc7049l8McTd8NQ=="

Detector: bannerbear_bannerbear_test.go
  validPattern: yvxpthLIcYpZweFpPOVeCOtt
  invalidPattern: yvxpthLIcYpZweFpPOVeCOtot

Detector: baremetrics_baremetrics_test.go
  validPattern: FNdRZCc2qoPLrwrLJIBE6vovy
  invalidPattern: FNdRZCc-qoPLrwrLJIBE6vovyu

Detector: beamer_beamer_test.go
  validPattern: DyVdf7+cAXw4MH9gT1CPotU31RMl__aLKbrABRWvT7TyO=
  invalidPattern: DyVdf7%c^AXw4MH9gT1CPotU31RMl__aLKbrABRWvT7TyO

Detector: beebole_beebole_test.go
  validPattern: bn6htprmfpukfalts4muwalxh9j15ucvnrfdme8t
  invalidPattern: DyVdf7%c^AXw4MH9gT1CPotU31RMl__aLKbrABRWvT7TyO

Detector: besnappy_besnappy_test.go
  validPattern: f58c5d37d7876d32cfdd823f8fe4ded364a8d483b5dbfadcc55ad801b3be8523
  invalidPattern: f58c5d37d7876d32cf__f8fe4ded364a8d483b5db+adcc55ad801b3be8523

Detector: besttime_besttime_test.go
  validPattern: 4K1WTb2ysVeg_jHDwtwhH68K9MuOjiTtXQCS
  invalidPattern: 4K1WTb2ysVeg^jHD*wtwhH68K9MuOjiTtXQCS

Detector: betterstack_betterstack_test.go
  validPattern: ntJD0ER8QpuT0O1WqsclApO2
  invalidPattern: DyntJD0ER8QpuT0O1WqsclApO2

Detector: billomat_billomat_test.go
  validPattern: billomatKey: xv3khh5klgzztdmptrgbqhkr0ucvr67i / billomatID: s2mels7c75tnsbs7ldu0wmjofzmugkg7vb
  invalidPattern: billomat_creds: s2mels7c75tnsbs7ldu0wmjofzmugkg7vb

Detector: bitbar_bitbar_test.go
  validPattern: 64pq66z15thg8fh3acd00l35lpyg7c82
  invalidPattern: DyV64pq66z15thg8fh3&cd00l35lpyg7c82$

Detector: bitcoinaverage_bitcoinaverage_test.go
  validPattern: zt7WwXWk7MYMNB3l2QdtB5itl9uvfhJ8s6h0hibid5E
  invalidPattern: DyV64pq66z15thg8fh3&cd00l35lpyg7c82$

Detector: bitfinex_bitfinex_test.go
  validPattern: bitfinexKey: HxfuG198amaeCcYkASkto5VuIO-oXcplDV6JZ7OIEQZ / bitfinexSecret: Pf3-3v989gPbJT54D3oDBiFZmJoLpWoTHGvF8xuSBPP
  invalidPattern: kASkto5VuIO%c^HxfuG198amaeCcYkASkto5VuIO

Detector: bitlyaccesstoken_bitlyaccesstoken_test.go
  validPattern: 2xN7puShxzNf5fZleQthTg305lKr7KrbW95D3gSD
  invalidPattern: 2xN7puShxzNf5fZleQthTg305l95D3gSD%c^

Detector: bitmex_bitmex_test.go
  validPattern: bitmexkey: I4_XpH-fJJiLFn--Wo7rnlXE + bitmexsecret: W_HlMtrmELzXm4bSlWv49JLcgvg5hvu467WbbnpmoEA-RjrY
  invalidPattern: bitmexkey: mELzXm4bSlWv49JLc%c^ bitmexsecret: IXpH-fJJiLFn--Wo7rnlXE

Detector: blazemeter_blazemeter_test.go
  validPattern: sjbuxa3m-vs4n-ykl8-8jpv-i09hdidciolp
  invalidPattern: sjbuxa3m-vs4n- ykl8-8jpv#i09hdidciolp

Detector: blitapp_blitapp_test.go
  validPattern: I_MncTA8nlFcqlBCakI5vwkwFD4_zRUYZKt8hyd
  invalidPattern: %blitAppKey:I_Mn%^&*qlBCakI5vwkwFD4_zRUY

Detector: blocknative_blocknative_test.go
  validPattern: 76e50995-059f-3d1a-af8e-cc85fc05eb03
  invalidPattern: 2xN7puShxzNf5fZleQthTg305l95D3gSD%c^

Detector: blogger_blogger_test.go
  validPattern: fnWLw7pz1tc6uCzq6qocQZIxRF6SqUaOOkLqePY
  invalidPattern: fnWL(w7pz1t)6uCz-q6qocQZIxRF6S/UqePY

Detector: bombbomb_bombbomb_test.go
  validPattern: HUmGL.17uQMEShYp2RVMR8vypd1iqj6FZcKkQ4SazuMkbEKhzRFKuvOiwYmNWPSvkE4wiLOv-zWTkK1WkVTScRb9_io0_kvhYX31tpwR3lAJUh27RJzf1BehaJTQDXhJB6aT2gQ2LMT7dda-b3vhmEuZHzPV9AMLV6cOrcqOTkK60vMcB0PTLRQ3c_kY.a.9.hRvgogdlI8mQJrzD0myPBY7lMpjpkcskQDpOgz2I37kNDYhf7IxT6sG-a7rI1LdpJ6HhJacktlNJSswST9jbt4A0ropfJJTHGny2aId4WyPpAnQubM98F1BUnyhfkDzenaUuuQ_ZoPn9mAOsdLQUlAyp4I9oLJ_v8yQ0Q4M.Yujscho9G4ZbVTInC2mP8taCPZdRK5qt-UfAF0CX9B4E0F9NItMUbRdbm3xIkl8C6iPUcgY5OTQDBSJRLKBJgIaEyyXe10pPw.qOUhLKNPcg5qPs1xhgBsZKfW2hNTff2dCL5h6E.940ojPuT0Iw90Q8kpQ2UzeUJrhXH9_GUANKA.pjD0-YcGpnlVEDouyXaXowUoh8pLqD-BtBQfteqyFqz7THGDvQKikMy7wiBuJAo0HttMG3jw1zKtA3gM6_VIXo_K4WN6yz8Ow4n5f6Unn5zn4j2haKA4WWI5-1c8-mm7SF5VqYJVz42wBmRqB6MWXegJ7yLt_EoG1tJHftnHZ
  invalidPattern: 17uQMEShYp2RVMR8vypd1iqj6FZcKkQ4SazuMkbEKhzRFKuvOiwYmNWPSvkE4wiLOv%c^zWTkK1WkVTScRb9_io0_kvhYX31tpwR3lAJUh27RJzf1BehaJTQDXhJB6aT2gQ2LMT7dda

Detector: boostnote_boostnote_test.go
  validPattern: fb1026ac5994e3ad01799fe040289317ba2594a20e9e45307a143be82b49d213
  invalidPattern: #^fb1026ac59=4e3ad01799fe04028931___4a20e9e45307a143be82b49d213$

Detector: borgbase_borgbase_test.go
  validPattern: FoHclCFSi_aV09jowJQ4RUF_MiqW6ioqq6_OcyB0PFlV-mQ1yoFjk5JLlxbzRUzKTA6vsfR8wq6TNc83rtNKlkD092Sj1c9CbPVBXlHksy.sT2I/so6bMGdPcqxzbjrxYgAUiORgqJDeTet4gKOQlZpt
  invalidPattern: mQ1yoFjk5JLlxbzRUzKTA6vsfR8wq,6TNc83rtNKlkD092Sj1c9CbPVBXlHksy%c^so6bMGdPcqxzbjrxYgAUiORgqJDeTet4gKOQlZpt

Detector: box_box_test.go
  testPatterns:
    input: box_access_token = 'Ogowv5cj5AJJjO5F3daNHbKJDdPud0CZ'
    want: "Ogowv5cj5AJJjO5F3daNHbKJDdPud0CZ"

Detector: braintreepayments_braintreepayments_test.go
  validPattern: braintreeKey: f7b3cb83a7fdb915a71ce17ab8a903cc \n braintreeId: kmajpm4h1pqoqxyo
  invalidPattern: braintreeCreds: f7b3cb83a7fdb915a71ce17ab8a903cckmajpm4h1pqoqxyo

Detector: brandfetch_brandfetch_test.go
  validPattern: uHOAdwfQ7sD2yOpur72UqyUeIqnFwILOIlEPyBtJ
  invalidPattern: yUeIqnFwILOIlEPyBt+=JOAdwfQ7sD2uHOAdwf2U[qy]UeIqnFwILOIlEPyBtJ^

Detector: browserstack_browserstack_test.go
  validPattern: accessKey: RxLVnOlvj3V4bh4RBwOd / username: Dun88d_-_-.4yggxTlrq
  invalidPattern: BS_USERNAME: Dun--d_$_$.4yggxTlrq%c^ \n BS_AUTHKEY: Dun88d_)

Detector: browshot_browshot_test.go
  validPattern: AemQ06R35S1Y8rXnOzYvT8I4-a7u
  invalidPattern: 2xN7puShxzNf5fZleQt#hTg305l95D3gSD-c^

Detector: bscscan_bscscan_test.go
  validPattern: HYZHPP4PBYXCOZAVK4FH55W4MRHYLALPU1
  invalidPattern: 2xHYZHPP4PBYXCOZAVK4FH55W4MRHYLALPU1thTg303gSD%c^

Detector: buddyns_buddyns_test.go
  validPattern: kkmvdiolccw4v0tue4lu7l7kmnnb4ao8z25ezink
  invalidPattern: diolccw4v0tue4lu7l7kmnnb4ao8z25ezink305l95D3gSD%c^

Detector: budibase_budibase_test.go
  validPattern: b256def166fcdf4a429a1e83175105d5-fd36f3da1e934bf533cd0e68dbb80ed6a42e1178bd4200428d83e876e7d05e40b21e3a68888f826d
  invalidPattern: diolccw4v0tue4lu7l7kmnnb4ao8z25ezink305l95D3gSD%c^

Detector: bugherd_bugherd_test.go
  validPattern: fisy6bbu6il4x96bekx587
  invalidPattern: fisy6bbu+6il4x()96bekx587-7l7kmnnb4ao8z25ezink305l95D3gSD%c^

Detector: bugsnag_bugsnag_test.go
  validPattern: wz9450iu-iewm-jonx-eab8-0ibxwadddm8i
  invalidPattern: bugsnagToken: %c^wz9450iu-iewm-jonx-eab8-

Detector: buildkite_v1_buildkite_test.go
  validPattern: kimu4axq3jxxdj8un0kpo3ua2ucr05zmhh4de0r6
  invalidPattern: buildkite: %c^wz9450iu-buildkite_secret-jonx-eab8

Detector: buildkite_v2_buildkite_test.go
  validPattern: bkua_hqlh73m51jtho0jh12wcf2758c8fcdbv05z023ly
  invalidPattern: bkua_: hqlh73m51jtho0jh12wcf2758c8fcdbv05z023ly-jonx-eab8

Detector: bulbul_bulbul_test.go
  validPattern: 3kx19qpx748ldb75lsjicbs6ipit6ssm
  invalidPattern: bulbulKey: %c^wz9450iu-3kx19qcbs6ipit6ssm-jonx-eab8

Detector: bulksms_bulksms_test.go
  validPattern: bulksmsKey: (QGxPqRyzvt%xEKcV&#ePJGn)k0d9a \n bulksmsID: 381A26C47380B85F2DB572314-ACBDC267B-8
  invalidPattern: bulksms creds: %c^wz9450iu-iewm-jonx-eab8-/F2DB572314-ACBDC267B-8

Detector: buttercms_buttercms_test.go
  validPattern: l7psk7wkedkpiyp4jrx5fjdnno8c89243of6yde8
  invalidPattern: butterCMSToken: l7psk7wkedkpiyp4j(rx5fjdnn)

Detector: caflou_caflou_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			base_url: "https://api.example.com/instances"
			api_key: $API_KEY
			caflou_auth_token: "Bearer b8SQoPKLMCBbwIm0XDzbZiDydUk9qNqqBlKnR5Nouwbjs9cv3D1azAXpiFq9WrfNlwxbCwDL2FWCheXmdYKZkMRZklahJh5NQZZY7Zf220hjGJOtKgFbWxy9xQ9hodQqsOOx9Of30qtTrnRxFPa9wxYkSBn"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: calendarific_calendarific_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			calendarific_api_key: "M9qT0uymrS2FgJ78p9CpLIlFOBLUtmao"
			base_url: "https://api.calendarific.com/v1/holidays?api_key=$calendarific_api_key"
			auth_token: ""

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: calendlyapikey_calendlyapikey_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			api_key: $API_KEY
			base_url: "https://api.example.com/v1/user"
			calendly_auth_token: "Bearer eyJuL_8UF5AiQVfO2xlr_HaoSluHz9u-Q-s1qWDWvycQhR11J9wZTmYfFpKnawuIbKjA4i340DSpYI3d3E-oEZZdcHW4cLd_OASWu-H.eyJuOUikPwjw1RKXYXfcjjeqQwdWzA4uooei_ADIUX3of4UzwTjSaaEzLWMGopW4n9Fma0nINBD1qUp_OtbhuH6dmHyv94IeX-hUYla.A0rTdrx3sJ"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: calorieninja_calorieninja_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			calorieninja_api_key: "ix1aaifujilTcGEjB67e1EBBRXcr7r9cdChAR5hb"
			base_url: "https://api.example.com/v1/user"
			auth_token: ""

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: campayn_campayn_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			campayn_api_key: "z6q8z47eu46wri18ygu6pc68vsizprt83jrlu5ustliyhktzoxbzhf1ycdaka978"
			base_url: "https://api.example.com/v1/user"
			auth_token: ""

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: cannyio_cannyio_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			cannyio_api_key: "faiiahli-goke-db0r-oxli-s20dgab9a0iv"
			base_url: "https://api.example.com/v1/user"
			auth_token: ""

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: capsulecrm_capsulecrm_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			api_key: ""
			base_url: "https://api.example.com/v1/user"
			capsulecrm_auth_token: "Bearer ULeIqU-4ss+YImZYsyjPLSsm.9H.SZJ1v.KxT1D-zbaW6sg5b0R5g=koBH4X62hC"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: captaindata_v1_captaindata_test.go
  testPatterns:
    input: captaindata_project = '12345678-1234-1234-1234-123456789012' captaindata_api_key = '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef'
    want: "12345678-1234-1234-1234-1234567890121234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
    input: captaindata_project1 = '12345678-1234-1234-1234-123456789012' captaindata_api_key1 = '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef'
captaindata_project2 = '87654321-4321-4321-4321-210987654321' captaindata_api_key2 = 'fedcba0987654321fedcba0987654321fedcba0987654321fedcba0987654321'
    want: 

Detector: captaindata_v2_captaindata_test.go
  testPatterns:
    input: captaindata_project = '12345678-1234-1234-1234-123456789012' captaindata_api_key = '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef'
    want: "12345678-1234-1234-1234-1234567890121234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
    input: captaindata_project1 = '12345678-1234-1234-1234-123456789012' captaindata_api_key1 = '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef'
captaindata_project2 = '87654321-4321-4321-4321-210987654321' captaindata_api_key2 = 'fedcba0987654321fedcba0987654321fedcba0987654321fedcba0987654321'
    want: 

Detector: carboninterface_carboninterface_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			api_key: ""
			base_url: "https://api.example.com/v1/user"
			carboninterface_auth_token: "Bearer PkN3gWaSHSIjz188TjD4h"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: cashboard_cashboard_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			cashboard_key: "F1A-NEI-HY4-PZK"
			cashboard_user: "ts7z"
			auth_type: Basic
			base_url: "https://api.example.com/v1/user"
			auth_token: ""

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: caspio_caspio_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			caspio_id: "qye6c979b55w55hz7nqrdgax3pufdsigwvhofsrxalgk01asty"
			caspio_secret: "x5vzi1o2fmnjywilv3obwx5n041f56v54lgral6znyccet8ibe"
			caspio_domain: xlo0xo2s
			auth_type: Client Credentials
			base_url: "https://$caspio_domain.caspio.com/v1/user"
			auth_token: ""

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: censys_censys_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			censys_key: "roLtT01S6znCRhgoSwNNKY8O7AELn8e4"
			censys_user: "p4cuaz9fuonwmbfkc4di5uqsizp4yyttpu-q"
			auth_type: Basic
			base_url: "https://api.example.com/v1/user"
			auth_token: ""

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: centralstationcrm_centralstationcrm_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			centralstationcrm_api_key: "gyeyy7soy4lxx7yenw56iba4szfu1f"
			base_url: "https://api.example.com/v1/user"
			auth_token: ""

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: cexio_cexio_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			cexio_key: "bVI24QF2B8omVr9ddfxSHtkb18D"
			cexio_secret: "2m2pEr2OLi48y2NCpSbPVwJqb"
			cex.io_userID: "zd930167221"
			auth_type: Signature
			base_url: "https://api.example.com/v1/user"
			auth_token: ""

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: chartmogul_chartmogul_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			chartmogul_key: "e8hwspf91879g0u267yq1bkoxquvwndk"
			auth_type: Basic
			base_url: "https://api.example.com/v1/user"
			auth_token: ""

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: chatbot_chatbot_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: Bearer
			base_url: "https://api.example.com/v1/user"
			chatbot_auth_token: "Bearer 5RzDGrpFKkrA_90yM_BFmyxKKAQkgu0B"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: chatfule_chatfule_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: Bearer
			base_url: "https://api.example.com/v1/user"
			chatfuel_auth_token: "Bearer 22ZEyoBNMXpT6rHmbuBlIJ8n19vo3tHzNTQDUku00WhHuBCAlkfkn8kQkXslseKEHARZthTrm8QfErQ5auXEr8teFIt6stHYi9sfJXM7IK0vEsezKFQwADCvMhX202eL"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: checio_checio_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: N/A
			base_url: "https://api.example.com/v1/user"
			checio_auth_token: "X-Authorization pk_k64v4e7f5vfun5efk7kscnvuwiuo9ioxbvxjq8qrdga0p"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: checklyhq_checklyhq_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: Bearer
			base_url: "https://api.example.com/v1/user"
			checklyhq_auth_token: "Bearer r3sd5apfe7p3eg1318qpbtxo36gwcct2"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: checkout_checkout_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: API-Key
			base_url: "https://api.checkout.com/v1/customers/cus_DaZoK0ioakAfFaj6fyqSFQZatk"
			checkout_api_key: "sk_test_14a67eEd-21Fd-B18d-2B8D-275697febE7D"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: checkvist_checkvist_test.go
  validPattern: wdvnusa87afxYn / testuser1005@example.com
  invalidPattern: wdvn-usa87a-fxp9ioasQQsstestUsQQ@example

Detector: cicero_cicero_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: ""
			base_url: "https://api.cicero.com/v1/user?key=sbxod2yo56quitbyujhkig3mgtu6z49f4hh56va6"
			auth_token: ""

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: circleci_circleci_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: API-Key
			base_url: "https://api.example.com/v1/user"
			circleci_api_key: "4a4fFEA0Cb7760ee42Bb1Dc82b1E4E5eDCacB9E7"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: clarifai_clarifai_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: API-Key
			base_url: "https://api.example.com/v1/user"
			clarifai_key: "WCFcfUCsl2P3vCJuFgDuLeUXduycoZli"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: clearbit_clearbit_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: Bearer
			base_url: "https://api.example.com/v1/user"
			clearbit_auth_token: "Bearer 9itvicgfiyq3ry6g03qwhwc_0s309dy8woh"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: clickhelp_clickhelp_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			user_email: "test-user@clickhelp.co"
			clickhelp_key: "XzUkp562BtmjfRGoOGBiLLNu"
			clickhelp_domain: testingdev.try.clickhelp.co
			auth_type: Basic
			base_url: "https://testing-dev.try.clickhelp.co/v1/user"
			auth_token: ""

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: clicksendsms_clicksendsms_test.go
  validPattern: # Configuration File for clicksendsms: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: Basic
			base_url: "https://api.example.com/v1/sms"
			sms_id: G9TXU2YD-NOYB-LLSX-21NU-5CX5SIA330Z7
			sms_email: user-test@clicksend.sms

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: clickuppersonaltoken_clickuppersonaltoken_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: ""
			base_url: "https://api.example.com/v1/user"
			clickup_token: "pk_7043602_WIKY22PAKCVC1S5Q2X6119IK7N1UL8VY"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: cliengo_cliengo_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			base_url: "https://api.cliengo.com/v1/user?key=9e4635bc-28dc-25d3-8546-2b30115d9a7b"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: clinchpad_clinchpad_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Basic"
			base_url: "https://api.example.com/v1/user"
			clinchpad_key: "3v1xo5r03ghc538iwzbzeddwqulnun8h"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: clockify_clockify_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			base_url: "https://api.example.com/v1/user"
			clockify_key: "kfJkRn7Knahh6pyDOL82NqNq5c4VLUNulVe5CMyJpIK9NXQC"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: clockworksms_clockworksms_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: ""
			base_url: "https://api.textanywhere.com/v1/user"
			clockwork_key: "84473"
			clockwork_token: "YROh7NZbZxHwiSc9pMNIAGYs"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: closecrm_close_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Basic"
			base_url: "https://api.example.com/v1/user"
			close_key: "api_3cyEW8syFEmeND561qJ9Sj8mT6E0VyWqY7h6cjJIBtc2e"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: cloudconvert_cloudconvert_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			base_url: "https://api.example.com/v1/user"
			cloudconvert_key: "eypn1gEV3BnckI3jcYzUvliSbukvxzO5acvE?ey8VEaR0lmpRa4IXv02fDPnlfdukWtb1/p-nlQlPVGnB52f9KwY4q98aVghXZqoit4AeFxMAHcCytOj61o8lHdcUF9fIcyF2HaFIk/k3Hdt7pS/5rb2eeWcEvc-5XB0T_Oh68AtCG8mOPpwKvzrhhIuEJck3vtFncgbDrSxg5mKkw924rMLP3Tb5tgIRuawZLwBxJL/qVIhAzfDGiIeNTzYOB9zHfHlfw3aZ1i/terePSN5EafVJ1yYw1KRXWL9/kPdAO0yFwSv3mUWx04oIIUURG6QKwO0rk7L0eAxnu4djnSXtqdvH_G50H1SSwwfKUg2Xz25-OZLkhxiaxEMMMY=3x0Yjhs7O1KFkI5gUQKH_VYAU2bJSAqpCKsxaYrdw91wUoya5rflCBVDHjC/BsezIkPFFmEu7sqs3WJg6dZeAiguYx7uZtDx1ILH18f29q9o34bM9SNolZNcG3fN7L2eWjilbmUq/Ty2545WkbHTjlcjLlHPAAjzLebfcFnlMSKH9Tqb/qx3G1z8wfzMa3dn3iRqNHwfmGOmfgK7RjtlZwoVruMjDWEza/o8imZF513yM7FrHTJkTFa1JjVbjU/C85ItZTiJsBUKAt/DbLg6W7lieKgHbgmz3cuwgVR7YDLZJB056TRcU9wrV0SUYDz0gogrpOEnZxdo4fb5UcCllj/AD/dYsfqVSHtTxKWBhun9Iqmx8FjgPtFCFugTxfaaHZ9dUC7TPahdSxixGvnu8EEvAs0Te85eJ9iyeq628Tvboz9J7KMq/uwflJtecSquJiWJT9GsYL5dl3Hr6ZYhxqs1-mrrB5FNzn-NPclPSu9PANtQ1BDuahKy683/t85F8yjug5C5paamNfgiJgOm5Vi/USUmWeVmH_htZoYGJTbOywDkRT1bYp9JIxlWHA29MInhWNrdlxZ_1h-SQ3fM6pzKIoJ0m_T/KXYERPzle0cy_/OnlfIa-yUgBnx_slQ1f9h0AS/PVMv/yZ6W"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: cloudelements_cloudelements_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: ""
			base_url: "https://api.example.com/v1/user"
			cloudelements_key: "4NloL5EzH3PLvNzjCMikofUfKXYOsYOeJBopEyDScIL"
			cloudelements_org: "inz9qofvjwnx59hgefq9sy5v64ilqrnu"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: cloudflareapitoken_cloudflareapitoken_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			base_url: "https://api.example.com/v1/user"
			cloudflare_token: "kOjD1yceduu2jxL2uuwT9dkOIudU3_54sLCEud6j"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: cloudflarecakey_cloudflarecakey_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			base_url: "https://api.example.com/v1/user"
			cloudflare: "vR2hGdmAyzLxI4kR34v-fgtaIug7VC_xudRuku6UQd5t9RoiY3zGiuVxMGiN6qR6O0cGjbGepFsHHrfm-9QmBahS.tvHRjYvf_c5XOKReWeVXsp3T-_gilqReVlS-U_9vj1tcMAwRjWCcehKiCOPnXEeN.Xg.lmwp0.mAIsgbrdPJsJE4hz7OF5PQ7D"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: cloudflareglobalapikey_cloudflareglobalapikey_test.go
  validPattern: abcD123efg456HIJklmn789OPQ_rstUVWxYZ-012 / testuser1005@example.com
  invalidPattern: abcD123efg456HIJklmn789OPQ_rstUVWxYZ-012/testing@go

Detector: cloudimage_cloudimage_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: ""
			base_url: "https://api.example.com/v1/user"
			cloudimage: "d__9rvli8sm4jo18v5q0q4n7vhkwbv"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: cloudmersive_cloudmersive_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			base_url: "https://api.example.com/v1/user"
			cloudmersive: "sxk5k1nfra8jak0mjjc6afr6v-6gsf7dr9o1"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: cloudplan_cloudplan_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: ""
			base_url: "https://api.example.com/v1/user"
			cloudplan_session_key: "Y6D1FIS3XZXIJLKD82P6U8IXYV4UEYPP"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: cloudsmith_cloudsmith_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "X-API-Key"
			base_url: "https://api.example.com/v1/user"
			cloudsmith: "6fd00a2cfd7bbc51e1c4db6ac2f29d59629afd22"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: cloverly_cloverly_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			base_url: "https://api.example.com/v1/user"
			cloverly_token: "564i_0a9_v58bn:p9st3r3cgi95_"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: cloze_cloze_test.go
  validPattern: 1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d / testuser1005@example.com
  invalidPattern: abcD123efg456HIJklmn789OPQ_rstUVWxYZ-012/testing@go

Detector: clustdoc_clustdoc_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			base_url: "https://api.example.com/v1/user"
			clustdoc_token: "yQ7mTTO4eJ4I9GHDEdzF3wq0KVowNKjPMud3q0ZqaEIuoR1qCrARUyLwknNP"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: coda_coda_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			base_url: "https://api.example.com/v1/user"
			coda_token: "64ukni4l-zub4-3coe-html-9byb40oi5i87"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: codacy_codacy_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			base_url: "https://api.example.com/v1/user"
			codacy_token: "g73RSmTIzTU1wUA5BXYI"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: codeclimate_codeclimate_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			base_url: "https://api.example.com/v1/user"
			codeclimate_token: "efbc069555c703d31c3bcc6fbd426cec5f21eb43"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: codemagic_codemagic_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Auth-Key"
			base_url: "https://api.example.com/v1/user"
			codemagic_key: "PSIYbVgfkbEPQoqJfzHpACTtihONkQ_cKmOpNDPNiCU"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: codequiry_codequiry_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			base_url: "https://api.example.com/v1/user"
			codequiry_key: "7cA6eb3AvmlVSqLMP4iKvp7fXtEAADQud11KidjPzbSLcvntAD8CK6P7uGaGdlit"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: coinapi_coinapi_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			base_url: "https://api.example.com/v1/user"
			coinapi_key: "6D8B5AUIRDQCB3NRKSMZZL9RCV9G07GTHUR3"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: coinbase_coinbase_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			base_url: "https://api.example.com/v1/user"
			coinbase_key: "IIQle6bXgoQEzxqHBt2VN0gW-Yve3t5k5VVD3nNAUUMCLVdK-3M4k6apjs43l0nM"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: coinlayer_coinlayer_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			base_url: "https://api.coinlayer.com/v1/user?key=gg2einqoe3zxu0ju7c3wqg9vql662vdj"
			key: ""

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: coinlib_coinlib_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			base_url: "https://api.coinlib.com/v1/user?key=seugeupfknprstoe"
			key: ""

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: collect2_collect2_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			base_url: "https://api.collect2.com/v1/user?key=22f39f53-3bd4-d84b-8e29-00402d5c316f"
			key: ""

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: column_column_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Basic"
			base_url: "https://api.example.com/v1/user"
			column_key: "live_ID8Jxlu0QRsV7rKkWI9CUDpkrUv"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: commercejs_commercejs_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: ""
			in: "Header"
			base_url: "https://api.example.com/v1/user"
			commercejs_key: "g6cl4jt_2noyibalgbqid4h58jxivqdgyyxovepbvqmbl7wq"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: commodities_commodities_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			commodities_key: "5aJKBqkCyGCT9FIWNUTmowbzqgcm9DUCi60mHwgPQRBSt7dFahv9eY329Dn9"
			base_url: "https://api.example.com/v1/user?access_key=$commodities_key"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: companyhub_companyhub_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: ""
			in: "Header"
			companyhub_key: "A5zrYt9xY4X1Q9mG6IX6"
			companyhub_id: "xzAMMncOTR7^5d5NS6"
			base_url: "https://api.example.com/v1/user"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: confluent_confluent_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Basic"
			in: "Header"
			confluent_key: "CVAJHB4RAZboV3Od"
			confluent_secret: "pIsdFuG0oJuyiir3GWqpC4pv7xpKFodCNh6PYN4XdE8EtyIwYtzEer0KtHQ8kofs"
			base_url: "https://api.example.com/v1/user?api-key=$confluent_key"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: contentfulpersonalaccesstoken_contentfulpersonalaccesstoken_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			contentful_access_token: "CFPAT-"
			base_url: "https://api.example.com/v1/user"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: conversiontools_conversiontools_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			conversiontools_key: "ey5g5C73ichf2TWwQQfuPNG2SW1xdTmCHFgS6zsUjRz3kkiEofoa8X7SVGjwAMkhrv5KyOFqunP29gQpKq9A4sPF_Ps4B4IkTtgUG9cgP5A5ygAkuSR2rsOC.SIDSLIy4jZiL7L8ZHyAhyR8msV7JzxlI6YsNqmmj"
			base_url: "https://api.example.com/v1/user"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: convertapi_convertapi_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			convertapi_key: "H9ZGTfAERfN5W0AX"
			base_url: "https://api.example.com/v1/user?Secret=$convertapi_key"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: convertkit_convertkit_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			convertkit_key: "hfCnuVcYOgiRjlDEmAoRbN"
			base_url: "https://api.example.com/v1/forms?api-key=$convertapi_key"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: convier_convier_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			convier_key: "49|07KJBwfPzF2ESyNui5yBw9OVB6eWj0iXkssEKC7b"
			base_url: "https://api.example.com/v1/user"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: copper_copper_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: ""
			in: "Header"
			copper_email: "s0ovh@P8I~p3"
			copper_token: "noqs39jzqaegbam2k6mai9ov1uwsl21y"
			base_url: "https://api.example.com/v1/user"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: couchbase_couchbase_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Password"
			in: "Configuration"
			couchbase_domain: "cb.testing.cloud.couchbase.com" // couchbase://
			couchbase_username: "usrpS@d>p"
			couchbase_password: "passwordU+2028 rf\@V[4,L/?2}"
			base_url: "https://$couchbase_domain/v1/user"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: countrylayer_countrylayer_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			countrylayer_key: "031eiaqplnq39py5ppsctxo6n2xj5t10"
			base_url: "https://api.example.com/v1/user?access_key=$countrylayer_key"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: courier_courier_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			courier_key: "pk_iHWk6NqTne0QthfSVF7uixZpa3OTYpA8hC6bIIavhluXfxz37FB_rHPqJNWh06HpNIOuokET4dfFzXS1"
			base_url: "https://api.example.com/v1/user"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: coveralls_coveralls_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: ""
			in: "Header"
			coveralls_token: "tPfhjkzKJyWtUdxDLYMjNDEfP7Yn9WvWb2-K3"
			base_url: "https://api.example.com/v1/user"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: craftmypdf_craftmypdf_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			craftmypdf_key: "GuTSS3XQdT6fx00mxudKq7oj2CsieZCGmEc"
			base_url: "https://api.example.com/v1/user"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: crowdin_crowdin_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			crowdin_token: "BiIRgdPvboWwqlhQtlnCsM041zVYCJ5yMfgltWesDiu9bv1nuRtCEPewsDL3vgRFcp2qLemaPMa8L9g7"
			base_url: "https://api.example.com/v1/user"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: cryptocompare_cryptocompare_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			cryptocompare_key: "lx8zzovs5h15zl15mj224zks2v25re59965gz0l1z4jsc0bng33a75m5pf52-bvd"
			base_url: "https://api.example.com/v1/user?api_key=$cryptocompare_key"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: currencycloud_currencycloud_test.go
  validPattern: 1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b / testuser1005@example.com
  invalidPattern: abcD123efg456HIJklmn789OPQ_rstUVWxYZ-012/testing@go

Detector: currencyfreaks_currencyfreaks_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			currencyfreaks_key: "6zlrpo4u8z4s72b2nqr54m9ehmqvwe8p"
			base_url: "https://api.example.com/v1/user?apiKey=$currencyfreaks_key"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: currencylayer_currencylayer_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			currencylayer_key: "sxthwp257vpusfe4gr4d4awc794lkxvh"
			base_url: "https://api.example.com/v1/user?access_key=$currencylayer_key"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: currencyscoop_currencyscoop_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			currencyscoop_key: "70x6tezndca5dqlm5tnn7s03bm6c27jt"
			base_url: "https://api.example.com/v1/user?api_key=$currencylayer_key"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: currentsapi_currentsapi_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: ""
			in: "Header"
			currentsapi_key: "thisistheapikey(asaspijf89aa$)lkunjo0#aenoiecnjh"
			base_url: "https://api.example.com/v1/user"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: customerguru_customerguru_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			guru_key: "WWj2zAK0tMkVJqc28Itfu6THQycyfT"
			guru_id: "Ic53IHpPK71wIacbCgEkIlFbw0VIMcsz6ir2i2DJ0XDRdirf2K"
			base_url: "https://api.customerguru.com/v1/user?api_secret=$guru_id&api_token=guru_key"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: customerio_customerio_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Basic"
			in: "Header"
			customerio_key: "bXQLU0kcl0A7kxCErc3L"
			customerio_id: "tM2JFc8pmKHUmkdwhmgG"
			base_url: "https://api.example.com/v1/user?access_key=$currencylayer_key"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: d7network_d7network_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Basic"
			in: "Header"
			d7network_secret: "u@D7GXt)t>8d(LtH^(lvZ<g="
			base_url: "https://api.example.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: dailyco_dailyco_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			dailyco_secret: "40842f16899170ffaf4e8ea99c68e748fac5e9ee5d675dd06fbe0c300a8f291a"
			base_url: "https://api.example.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: dandelion_dandelion_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			dandelion_secret: "xccl325526f9cp6qzh89qkgoklje5ds9"
			base_url: "https://api.example.com/v1/example?token=$dandelion_secret"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: dareboost_dareboost_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: ""
			in: "Body"
			dareboost_secret: "fS6aBVkb0qpOje4VED8OhKqGGNdNVUuDhdBi9fTvxwIRMNK2uyd68WlPa1X5"
			body: {"payload":$dareboost_secret}
			base_url: "https://api.example.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: databox_databox_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Basic"
			in: "Header"
			databox_secret: "arjrvgzxx20sivy4rigjs"
			base_url: "https://api.example.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: databrickstoken_databrickstoken_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			secret: "dapib8a799e452bf722cb28874cee50a7abf"
			domain: "nonprod-test.cloud.databricks.com"
			base_url: "https://$domain/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: datadogtoken_datadogtoken_test.go
  validPattern: # Datadog Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			dd_api_secret: "FKNwdbyfYTmGUm5DK3yHEuK-BBQf0fVG"
			dd_app: "iHxNanzZ8vjrmbjXK7NJLrwpGw2czdSh90PKH6VL"
			base_url: "https://api.example.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: datagov_datagov_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			data.gov_secret: "Ge4R2TmPk1R6NPsXYu0ceRnmawtYfnVeiZ4zztB8"
			base_url: "https://api.example.com/v1/example?api_key=$data.gov_secret"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: debounce_debounce_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			debounce_secret: "OTM0Bp42sFTRB"
			base_url: "https://api.example.com/v1/example?api=$debounce_secret"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: deepai_deepai_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			deepai_secret: "ulrouaemk45y6pr8clttmjw8sucqq3skl7g9"
			base_url: "https://api.example.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: deepgram_deepgram_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Token"
			in: "Header"
			deepgram_secret: "4y7fjndvwi8bydxfwe0zppeef9n6j44kpizq3zr4"
			base_url: "https://api.example.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: delighted_delighted_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Basic"
			in: "Header"
			delighted_secret: "Vm62eJY7FFguRjYjqIdiLXUEOoRgvQ6W"
			base_url: "https://api.example.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: demio_demio_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			demio_key: "KL0F0y61VeIixRmn2A4Sha3h0xiLMX7J"
			demio_secret: "PWkiVWEw7s7JjtzR"
			base_url: "https://api.example.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: deputy_deputy_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			deputy_secret: "puf5nguo090lkrkqxfeqj5ymm0nb26pt"
			base_url: "https://api.nonprodtest.as.deputy.com.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: detectify_detectify_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			detectify_secret: "eg90srff9v6cxk794kr2k56l5q5s9wx2"
			base_url: "https://api.example.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: detectlanguage_detectlanguage_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			detectlanguage_secret: "6esicmhsdpu8blum1wzr8a6bae9s507u"
			base_url: "https://api.example.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: dfuse_dfuse_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			dfuse_secret: "web_akqaeqqsrlb5bczdblzgi4g94i3yt2jb"
			base_url: "https://api.example.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: diffbot_diffbot_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			diffbot_secret: "un7g0mse9r0i1m2p56832mja133vtysm"
			base_url: "https://api.example.com/v1/example?token=$diffbot_secret"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: diggernaut_diggernaut_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			diggernaut_secret: "vwrclry0t0ttuggr7gjdxarb9yb4td1618nziytp"
			base_url: "https://api.example.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: digitaloceantoken_digitaloceantoken_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			digitalocean_secret: "wisN3jbppF1dA3vrcB0C40iRlNiXAvEE8ToRFHkfBQS5dt5KIq-E8_vKW7NqrJJO"
			base_url: "https://api.example.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: digitaloceanv2_digitaloceanv2_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			digitalocean_secret1: "doo_v1_997deb722a2cf8f14a2eef30e41ed96e08268603b7877a595504e4367ca58e3d"
			digitalocean_secret2: "dop_v1_997deb722a2cf8f14a2eef30e41ed96e08268603b7877a595504e4367ca58e3d"
			digitalocean_secret3: "dor_v1_997deb722a2cf8f14a2eef30e41ed96e08268603b7877a595504e4367ca58e3d"
			base_url: "https://api.example.com/v1/example?refresh_token=$digitalocean_secret1"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: discordbottoken_discordbottoken_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Token"
			in: "Header"
			discord_id: "17014529625858348"
			discord_secret: "oHILWmk3qakMYbqAikD9R0nJ.Vhu0LY.FK1U_2L2Of8Bm5ESbD6Cy4VKu2K"
			base_url: "https://api.example.com/v1/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: discordwebhook_discordwebhook_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: ""
			in: ""
			discord_hook: "https://discord.com/api/webhooks/144147826297622273/Rz9B09dB7cXxtldzXXfmJY0opIzgeANtGJw08vx5PXrP8BpbOeE5lZ7wx8vVcyacYkEl"
			base_url: ""
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: disqus_disqus_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			base_url: "https://api.disqus.com/v3/example?token=T7YaiuviPyYp8WyWlJ9lqQLI5oPirYMcfDYLPY7NAqxAr3872ovqq9AOVU3RcPUB"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: ditto_ditto_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			api_version: v1
			ditto_secret: "smtkww1b-bpux-6mds-r977-7kr1rb1q8r5o.4jwv35awjadnwzzm4u4kz8otf3lgmns2oazb8f6w"
			base_url: "https://api.ditto.com/$api_version/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: dnscheck_dnscheck_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			api_version: v1
			dnscheck_secret: "GaMSE8mJT7evjXg1Tmwz0wAyrY4Yagur"
			base_url: "https://api.dnscheck.com/$api_version/groups/zDTON8dac54pwe1OaCrKhcwC9qptimIdX42K?api_key=$dnscheck_secret"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: dockerhub_v1_dockerhub_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: ""
			in: ""
			api_version: v1
			secret: ""
			base_url: "https://api.example.com/$api_version/examples"
			response_code: 200
		docker:
			user: rRwOdIJpY90QrIzOXO95d3hlSzRk5Z9a
			docker_email: "docker-test@dockerhub.com"
			docker_token: "9jyxkwvk-rjnp-7eo1-1gtc-ruj6rqmiyapo"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: dockerhub_v2_dockerhub_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: ""
			in: ""
			api_version: v1
			secret: ""
			base_url: "https://api.example.com/$api_version/examples"
			response_code: 200
		docker:
			user: rRwOdIJpY90QrIzOXO95d3hlSzRk5Z9a
			docker_email: "docker-test@dockerhub.com"
			docker_token: "dckr_pat_dlndn9l2JLhWvbdyP3blEZw_j7d"

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: docparser_docparser_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			api_version: v1
			docparser_secret: "1761d026b1202108b5f9ecd28d1ecae826b0aee8"
			base_url: "https://api.example.com/$api_version/example/api_key=$docparser_secret"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: documo_documo_test.go
  validPattern: # Documo Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Basic"
			in: "Path"
			api_version: v1
			secret: "eyS9YqgD6TgdQ943G8S3aaiz26m2fTN9rcPbpeyts0jBEFd43hEFfr9pC7voqvLsbEi7Px4TbMToCVrstQRe8r2kltKGWyChYCT1Iruo6p3g3PyqZaZ1gOSbjeXz8zARUHZkXo7XR86kape65HLXj59yCNIlW5bvebJYbIAjjgGAAmXVgzldvNv8Zs08KIS5y62QJSNcnipFQbnxA8z6TUMl0F600MJhqEILWo19GaGjw"
			base_url: "https://api.example.com/$api_version/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: docusign_docusign_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Basic"
			in: "Path"
			api_version: v1
			docusign_id: "03f36108-730e-9061-ad3f-b77c910b2559"
			docusign_secret: "212904c1-60fc-09b2-d615-1849cd748bf4"
			base_url: "https://api.example.com/$api_version/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: doppler_doppler_test.go
  validPattern: # Documo Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Path"
			api_version: v1
			doppler_secret: "dp.ct.5KE9aLrlMoprKwgigGZl1zJOOMQDcYPTWoTPujmF5Tm3"
			base_url: "https://api.example.com/$api_version/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: dotmailer_dotmailer_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Basic"
			in: "Path"
			api_version: v1
			dotmailer_key: "apiuser-trq6zw9mmdlt@apiconnector@com"
			dotmailer_secret: "N{w44mqa'2si(zY8"
			base_url: "https://api.example.com/$api_version/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: dovico_dovico_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Token"
			in: "Header"
			api_version: v1
			dovico_user: "ntb4fnhk5iot7hzbfjw08jm661iocdd4.3ws4olz2l5jzw54yv3ai0qwdri6l1f4iyruc7f"
			dovico_token: "nuhkw7nsrybuvmetium29a6oajxr3xdg.sbpi6evkkrqz3onrg2epqj9i2lgkb0wxf8lq0gdzvw6macc9br1qi9ry335u173dr3gzcgy9v6"
			base_url: "https://api.example.com/$api_version/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: dronahq_dronahq_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			api_version: v1
			dronahq_secret: ""
			base_url: "https://api.dronahq.com/$api_version/example?tokenkey=5j5jvhn9hm6qojajn61pe1ccqly424lrd0g41vbh6wwscer3pa"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: droneci_droneci_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			api_version: v1
			droneci_secret: "Kf6ZyWFttCZwO9SqEB94opCHaQ5n00WF"
			base_url: "https://api.example.com/$api_version/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: dropbox_dropbox_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			api_version: v1
			dropbox_secret: "sl.4ihqlizKRm9J8tJvdBUecLPfYunjh3Nx73cUBGcRKpTFxRny3cYKdaQdzVF_rBIEO9emJaHyRWeM_tm5pYJFTc1TwYjM2fHlhSdhKkzHJjf5dx86fUlaO_eKY9r4ijZ8eD"
			base_url: "https://api.example.com/$api_version/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: duply_duply_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Basic"
			in: "Header"
			api_version: v1
			duply_id: "JN9YXKN-2OB6UTI-VTN7DX8-FIZZM7P"
			duply_secret: "24cc4537-f4ea-b9de-7369-41481c6e914f"
			base_url: "https://api.example.com/$api_version/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: dwolla_dwolla_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Basic"
			in: "Header"
			api_version: v1
			dwolla_id: "MvkLktYDS7PSE0xRMHIYBKrAjXruEk5P1VrJUUGtgspa3KTi6r"
			dwolla_secret: "q3DZbY7iviUpewfCHEpK1I51G8XW63GuLuJyAIEqOFtEB1qlg1"
			base_url: "https://api.example.com/$api_version/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: dynalist_dynalist_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Token"
			in: "Body"
			api_version: v1
			dynalist_secret: "60l0XYOX_VZrJsbpid4TllHwdek_3NXxgKz_DkO3lrw_B8aHxSov-TOPojCMtBED8q4awfqsMdNcOkCxrmqkbDQW2dJ8lukGTgJZBqfPQKOYujZZBXKZng3SXM-huIRM"
			base_url: "https://api.example.com/$api_version/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: dyspatch_dyspatch_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			api_version: v1
			dyspatch_secret: "RLZTXG010RHW7FCSAEX72TPRJS1JU1PU0PVSWFF6HZQOUEVY5MFN"
			base_url: "https://api.example.com/$api_version/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: eagleeyenetworks_eagleeyenetworks_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Token"
			in: "Body"
			api_version: v1
			eagleeyenetworks_email: "test08@eagleeyenetworks.com"
			eagleeyenetworks_secret: "Y6YWq0NfYgyJCL0"
			base_url: "https://api.example.com/$api_version/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: easyinsight_easyinsight_test.go
  validPattern: poiuy76=a_$90ertgh0K
  invalidPattern: poiuy76=a_$90ertgh0K

Detector: ecostruxureit_ecostruxureit_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			api_version: v1
			ecostruxureit_secret: "AK1CI5QsL1zvRE5KBX/uL9KuiZOJq27GwcJu4fV/xyTJcYCrYP0ykE"
			base_url: "https://api.example.com/$api_version/example"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: edamam_edamam_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			api_version: v1
			edamam_id: "1vsqsubh"
			edamam_secret: "e3at3vut4x27aq5wpkjmivjt9kq5cune"
			base_url: "https://api.example.com/$api_version/example"
			query: "app_id=$edamam_id&app_key=$edamam_secret"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: edenai_edenai_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			api_version: v1
			edenai_secret: "CQcxzQhT70xdDr8J6zGDpTY4Iv3ro10k1YMG}XLr0DyMXgnxMCqx4m92bgOK5QkBZJJNSoOHk8y6yEuoIu6MBb5I12Jbrjw9TpMWUf8dgxSlFyvFpyUOz5A3gvJu926a4F17oRzQpAfBAjGpL91ZxNtZ5uDy50MNnh1VgadWFnRzR"
			base_url: "https://api.example.com/$api_version/example"
			query: ""
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: eightxeight_eightxeight_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			api_version: v1
			8x8_id: "ByvWSRLcNhS_bgLBjD4hAhUvkWLz"
			8x8_secret: "LiE1BOtWbU7YucNYPnXNG0LIFlkfWcMt8KLBu1MfjeS"
			base_url: "https://api.example.com/$api_version/example"
			query: ""
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: elasticemail_elasticemail_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			api_version: v1
			elasticemail_secret: "KjzCaS0dOHBFkH6ljFkQp353jV8FH5Fgmo9-t9Bgl2iP1btjXEEaGwOPVnR8LZFSksLpL4kwxUXOFJBGwz6xBbVeJIR8K17p"
			base_url: "https://api.example.com/$api_version/example"
			query: "apiKey=$elasticemail_secret"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: elevenlabs_v1_elevenlabs_test.go
  testPatterns:
    input: XI_API_KEY = 'b41b9d78aefb8c7c6cf9ebf01231340b'
    want: "b41b9d78aefb8c7c6cf9ebf01231340b"

Detector: elevenlabs_v2_elevenlabs_test.go
  testPatterns:
    input: XI_API_KEY = 'sk_c43667f9bedd46fcff858f09f648d984533645e30f0541df'
    want: "sk_c43667f9bedd46fcff858f09f648d984533645e30f0541df"

Detector: enablex_enablex_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Basic"
			in: "Header"
			api_version: v1
			enablex_id: "hkhihhsneir2aablmbk55u8f"
			enablex_secret: "iSgJYVk9ZhWwgLTH9hyTv1IjqIKUNeX6B623"
			base_url: "https://api.example.com/$api_version/example"
			query: ""
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: enigma_enigma_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			api_version: v1
			enigma_secret: "dkQePsD59DdzfoSuIZ2Po2md3q0ENVnvyIDdxs2E"
			base_url: "https://api.example.com/$api_version/example"
			query: ""
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: envoyapikey_envoyapikey_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			api_version: v1
			envoy_secret: "53PbWnxV5h7pZGNmw7U6FL79ithvedz1PWSvhFyJDZbqT5ECihUDeQ4MY6O3qTtKMKNFh2Hc5D54pchSKYyTVKi3nqJITLhZi17uCHJVQKrinOrkGL9IUh6QFjDjN3NcK1HKAimUgcNY2B8meGBfQmQ2QnVhKZcK1E8ldT9w4eb9ihgEwnG2lMjG41k5bZEPos3sJDEJWZ39U2J2Yu6OP8h8AVLw"
			base_url: "https://api.example.com/$api_version/example"
			query: ""
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: eraser_eraser_test.go
  testPatterns:
    input: eraser_token = 'KkBmh6TUBIcyFAp20XXa'
    want: "KkBmh6TUBIcyFAp20XXa"

Detector: etherscan_etherscan_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			api_version: v1
			etherscan_secret: "9VROD0TR8VNW4ZEC0U2YK5W9X0B2HO1KAD"
			base_url: "https://api.example.com/$api_version/example"
			query: "apikey=$etherscan_secret"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: ethplorer_ethplorer_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Payload"
			api_version: v1
			ethplorer_secret: "QGp6JMwswjqb5FJFGuslKQ"
			base_url: "https://api.example.com/$api_version/example"
			query: ""
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: eventbrite_eventbrite_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			api_version: v1
			eventbrite_secret: "1SS1TOXV0S90JCAQ3G8F"
			base_url: "https://api.example.com/$api_version/example"
			query: "token=$eventbrite_secret"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: everhour_everhour_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			api_version: v1
			everhour_secret: "a289-1dad-dbeeeb-2c0b1f-dc0ed546"
			base_url: "https://api.example.com/$api_version/example"
			query: ""
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: exchangerateapi_exchangerateapi_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "Bearer"
			in: "Header"
			api_version: v1
			exchangerate_secret: "gi77wx50yrynzt6tdyh9ugh3"
			base_url: "https://api.example.com/$api_version/example"
			query: ""
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: exchangeratesapi_exchangeratesapi_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			api_version: v1
			exchangerates_secret: "flo7en8mnclsnz50dme89e9vwr3l9jbb"
			base_url: "https://api.example.com/$api_version/example"
			query: "accesskey=$exchangerates_secret"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: exportsdk_exportsdk_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Header"
			api_version: v1
			exportsdk_id: "ipwa96igr30chlcfr8xb7gack2xgfd7ov8zk"
			exportsdk_secret: "q6l59i_dd8w6gfvh--le8xasayvsufpvt4uh1pzmu07"
			base_url: "https://api.example.com/$api_version/example"
			query: ""
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: extractorapi_extractorapi_test.go
  validPattern: # Configuration File: config.yaml
		database:
			host: $DB_HOST
			port: $DB_PORT
			username: $DB_USERNAME
			password: $DB_PASS  # IMPORTANT: Do not share this password publicly

		api:
			auth_type: "API-Key"
			in: "Path"
			api_version: v1
			extractorapi_secret: "jSCInysVesUIQ8vn7ZIQg3vKUCB8FgMnXTvJ4CKN"
			base_url: "https://api.example.com/$api_version/example"
			query: "apikey=$extractorapi_secret"
			response_code: 200

		# Notes:
		# - Remember to rotate the secret every 90 days.
		# - The above credentials should only be used in a secure environment.

Detector: facebookoauth_facebookoauth_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Facebook",
		"type": "Detector",
		"api": true,
		"authentication_type": "OAuth",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"facebook_appid": "5295912532069628",
			"facebook_secret": "rw6rTIk14bOEW84MkNbLVqVbrLJugJo7"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: faceplusplus_faceplusplus_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FacePlusPlus",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"faceplusplus_id": "ipScAHzUxOS2CQ3JwTdIDG1ClxZl_iVH",
			"faceplusplus_secret": "Qomsw0IQtp3iz1jlxAqQJO5afpbeEeAh"
		},
		"expected_response": "200",
		"method": "POST",
		"deprecated": false
	}]

Detector: fastforex_fastforex_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FastForex",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"fastforex_secret": "jk-qatdz1xcgoz3yssqexstefbtq"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: fastlypersonaltoken_fastlypersonaltoken_test.go
  validPattern: // headers and header values
	const fastlyKeyToken string = "Fastly-Key"
	const fastlyKey string = "TVAWji0p7uDI6OP9DyWvmV-vgoUoXIuf"
	const contentTypeToken string = "Content-Type"
	const appJsonContentType = "application/json"
  invalidPattern: // headers and header values
	const fastlyKeyToken string = "Fastly-Key"
	const fastlyKey string = "$FASTLY_KEY"
	const contentTypeToken string = "Content-Type"
	const appJsonContentType = "application/json"

Detector: feedier_feedier_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Feedier",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"feedier_secret": "kZ581ej1fDjtvE8iXNcgFJ8V2t0Lfv1d"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: fetchrss_fetchrss_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FetchRSS",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"fetchrss_secret": "x3lljmW2KHoljMrcFSTN5nWWAvDjwdQA0ed0QmHL"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: fibery_fibery_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Fibery",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://%s.fibery.io/example",
		"domain": "nonprod",
		"test_secrets": {
			"fibery_secret": "42b2eda8{3fe6b086bb21be7e3548368626d01aaf2cd"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: figmapersonalaccesstoken_v1_figmapersonalaccesstoken_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Figma",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"figma_secret": "647501-6p71dd66-3k6s-un9a-0ri0-0ypi87cz3rmx"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: figmapersonalaccesstoken_v2_figmapersonalaccesstoken_v2_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Figma",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"figma_secret": "figr_EZe7plhYvN92IyiDCjkvTcbNVZsuRVpDcHOwNNP1"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: fileio_fileio_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Fileio",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"fileio_secret": "4N4VTAX5KCE0L6R56HS9778HVC2.KH83JBNN7F3"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: finage_finage_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Finage",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"secret": "API_KEYN2B1NFN5CP6CK5BJHY8B15YF535TP681"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: financialmodelingprep_financialmodelingprep_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Financial Modeling Prep",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"financialmodelingprep_secret": "WXEUwkx44VjTRlunqyncJOCDeszMoC6p"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: findl_findl_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Findl",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"findl_secret": "l06ebuli-0k4m-b5yg-xieh-81s5b9s04ssu"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: finnhub_finnhub_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Finnhub",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"finnhub_secret": "5rjqnul3u250d36i73lc"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: fixerio_fixerio_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Fixerio",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"fixerio_secret": "adAM8pezol6tzRrFufnOmUSd4UUO2DoZ"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: flatio_flatio_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Flatio",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"flatio_secret": "n8dihgssrd0h0vv51l29da4wneg6ypo7qegcem2k3jcs9f6ywisvqu8vdimwp0m7pzo6ohnb01d13trnpun3couzbhvtlkbu2fsy8tliiww9ggis53s7xi9mvejj2idy"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: fleetbase_fleetbase_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Fleetbase",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"secret": "flb_live_ZtWtb6hVkUMVdUDg2lgK"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: flickr_flickr_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Flickr",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"flickr_secret": "x0b3lyve4dzszjak9afwb1bp3bz9z4z3"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: flightapi_flightapi_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FlightAPI",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"flightapi_secret": "024j4wjk6671d9kvm8a7iouu"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: flightlabs_flightlabs_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FlightLabs",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"flightlabs_secret": "eyBejkA9vwoG6xGr6awmKPT3xdznWqM4jpbz.ey3UspgSVM9j311NMff2N27tGEWSmr8sl1SguOxwzelJSYPOOVp-8BwHsdHqWKWpoVvZAc4kXKJ2kpROZ1RY_0xSj51iWOoi5UvvxOlaIHTzMEEiudOJRQuzYxwtqtl1rZyRlFuxTm0YR5wWPFM0GlWzmCf_yKz.dmSGyVThf_F.atNcL556uLcZ9D6MTIlQoC9hD1u3EbBqL6nb32cgFowGosYnqkSgbCFPLg6LIhK_PADfDzUY2bTEsk7uEIbGxPXofrLgJ_aiR2H09gEOtMAvPgkWLAbKoJg7X3UKF5BrK0GFdHAWvsB"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: flightstats_flightstats_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FlightStats",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"flightstats_id":"35o5omng",
			"flightstats_secret": "ksqxv0hkdkli9s71bd7ebfl5cijbab7f"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: float_float_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Float",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"float_secret": "50604f993cb9e4dfCsmIjdN5bCx5FnnfaukUdv7S9sm9L5wB2fZSUkZqHn="
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: flowflu_flowflu_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FlowFlu",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"flowflu_account": "tsPX0KAuOZPMy9BMjTwmph",
			"flowflu_secret": "QdUZ0jRet5Z8nQjMgbLUGHZqShpFHCydCnL7hpTNXnwpUy75SJi"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: flutterwave_flutterwave_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FlutterWave",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"flutterwave_secret": "FLWSECK-aylhdv2oo3wf5tylj8s4d9bqb8adoebx-X"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: fmfw_fmfw_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FMFW",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"fmfw_key": "cno3jaTTtgBeo3b_y82FPdrw4Yxfspvd",
			"fmfw_id": "nsrD8XVjeXc4Z-uGw6CgTBRXHmTjbizL"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: formbucket_formbucket_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FormBucket",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"formbucket_secret": "qE4P6YytmrnbI4o7xmr3Ct9umMOgM7CKqlUTvdMsXICpUEEow2ZDQi0CyZ7AYir4BkqsxvKdV33095olnQO6gkHgoZsSHPG41oqLrrM3g.l1Vt_Jv9iuT7w4si"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: formcraft_formcraft_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FormCraft",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"formcraft_secret": "zgej8qae3ehc0mjo"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: formio_formio_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FormIO",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"formio_secret": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.3IJk8Ys67c6tWlZi346ptymjjgkzwSyE5G2RbPS3kNyxuD4DFUj1vJFqlzZUTwUTHzhTEiUCPG3xtBFPfEBCGBtKDdh4SB3QhWHZAvEx3v61Mv1bsg3dhiKeGEJBluxNr8FRWHNmCaWq7KQpqK6YDX7ItacPKYKzOWXw16Swwj8lnKORhut3TjIsNa0dSoTCGeVZQey0RD0GuWuuXIz5Bu6xQoVnexXGKmbm3wu4VMxsXaquKvW6xXo.lQWeje6Ck-SNJR1LEwHqOFjVfad7-SXyV2nivyHnpxt "
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: formsite_formsite_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Formsite",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"formsite_server": "fs02",
			"formsite_user": "ITest2",
			"formsite_secret": "8PKXsB1ohFUGnw0j8y3g9pRUvDj0I1Ha"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: foursquare_foursquare_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FormSquare",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"foursquare_key": "NUAL8SFC7DGMAA0V79J57TSMOVZTH5HI5B7IM1BCF4L3IQXG",
			"foursquare_secret": "CII2183RFI60TZGXHK25A06VWZYE19IBMGJQZAIG3PPJFZ6M"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: frameio_frameio_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FrameIO",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"secret": "fio-u-K7eiW0xMd1Jik7454mOy2FkHJP0FX2BYWtK-siLXJrLBgT74SPzfxPJ_A2ryVmms"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: freshbooks_freshbooks_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FreshBooks",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"freshbooks_secret": "1mf2l4mk58ht4yixjwxmwnvqroiwbj8xtoo3v7c1oq1axli7yx6hvs44emvt1hc0",
			"freshbooks_uri": "https://www.nonprod-freshbooks.com"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: freshdesk_freshdesk_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FreshDesk",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"freshdesk_secret": "b1guF4w149TTJjj6ofMe",
			"freshdesk_uri": "api-nonprod.freshdesk.com"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: front_front_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Front",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"front_secret": "z9483lnBn5dKi1Aho6o5uTvdFlHlBV2OLsnyilD4emza-My7rHL5.gHIRbQ4mi3_nPknCuZ9SEzwEavOm.Dwm2fHke-Qkh_IhOLBcFe.LKahBD_Mv.gB5BGKNjgJIhS68MxYEEJtTdgqrt4srztG8C08Jz90Otgvq8MCaapezsRbANbUqm-YEZlB40Nl_.05j--fTwe0Ksbxbpti2KIGOeZsTyLGMTuRDawVfe9TH6WkjP",
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: ftp_ftp_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Ftp",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"secret": "ftp://test:nonprod@ftp-enterprise",
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: fulcrum_fulcrum_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Fulcrum",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"fulcrum_secret": "beuowbktxiosarw2nmme5j4qstotfq05sg9mhopulguyulnx91mjwcgcvsi1t9qjzrif13r7eahfc83p",
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: fullstory_v1_fullstory_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FullStory",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"fullstory_secret": "vKxrRC8ukovVUMaFoSSQVN+iadrjz28Jlxjbt3s//m5xz--jepr-1wrJcj8JmzjQhmEizTeJWgiP4YMYH73bHpFm",
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: fullstory_v2_fullstory_v2_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FullStory",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"fullstory_secret": "na1.0dDp/nOUE6tV/q5YxDtJQmWKBibPLqhX9H0nJcW9rReyBHIFuwnMwbLZcAijj1yYRP8AWgZBbUOOh4QP26sJMiqOYOcEZULACm8U",
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: fxmarket_fxmarket_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "FxMarket",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"fxmarket_secret": "DyB2QCacJ_D8bk1W7PlG",
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: gcp_gcp_test.go
  testPatterns:
    input: [{
    want: `{"type":"service_account","project_id":"my-test-project","private_key_id":"abc12345def67890ghi","private_key":"-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASC...\n-----END PRIVATE KEY-----\n","client_email":"my-test-project@my-gcp-project.iam.gserviceaccount.com","client_id":"123456789012345678901","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url":"https://www.googleapis.com/robot/v1/metadata/x509/my-service-account%40my-gcp-project.iam.gserviceaccount.com"
    input: {
    want: "{\"type\":\"service_account\",\"project_id\":\"api-5153635936162123384-123456\",\"private_key_id\":\"2b387b72ec1b082aa7e52189d9c43f58fb19fb48\",\"private_key\":\"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDE/XlaMP419pkUEXAMPLE=\\n-----END PRIVATE KEY-----\\n\",\"client_email\":\"unit-test-value@api-5153635936162123384-123456.iam.gserviceaccount.com\",\"client_id\":\"109763165530299657612\",\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\"token_uri\":\"https://oauth2.googleapis.com/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_x509_cert_url\":\"https://www.googleapis.com/robot/v1/metadata/x509/unit-test-value%40api-5153635936162123384-123456.iam.gserviceaccount.com\"
    input: {
    want: "{\"type\":\"service_account\",\"project_id\":\"unit-test\",\"private_key_id\":\"10f922eb17fba903dc59f7baf753976233520012\",\"private_key\":\"-----BEGIN PRIVATE KEY-----\\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQCgyAZHbtJu1MRf\\ng9+Wg==\\n-----END PRIVATE KEY-----\\n\",\"client_email\":\"fake-value@unit-test.iam.gserviceaccount.com\",\"client_id\":\"123456476766156356779\",\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\"token_uri\":\"https://oauth2.googleapis.com/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_x509_cert_url\":\"https://www.googleapis.com/robot/v1/metadata/x509/fake-value%40unit-test.iam.gserviceaccount.com\"
    input: {
  			resolve: 'gatsby-source-google-spreadsheet',
  			options: {
  				/// TODO ///
          // Find a better way to include credentials without literally displaying in the config.
          credentials: {
            client_email:
    want: ""
    input: module.exports = {
    credentials: {
        google: {
            client_email: process.env.GOOGLE_CLIENT_EMAIL || 'cloudsploit@your-project-name.iam.gserviceaccount.com',
            private_key: process.env.GOOGLE_PRIVATE_KEY || '-----BEGIN PRIVATE KEY-----\nYOUR-PRIVATE-KEY-GOES-HERE\n-----END PRIVATE KEY-----\n'
        },
    want: ""
    input: GOOGLE_SERVICE_ACCOUNT_EMAIL=jedicconnect@f4k3acc.iam.gserviceaccount.com
GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY=
    want: ""

Detector: geckoboard_geckoboard_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GeckoBoard",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"geckoboard_secret": "pi7BjvBbRvB3DkmnfEBQazWLiL55IY2jPlim7z1bqmO3",
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: gemini_gemini_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Gemini",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"gemini_key": "master-SBR89HWzNzbSfsj9ADI8",
			"gemini_secret": "via91gY9tLJKVz5At3DQjs8Slz1"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: generic_generic_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5", // should not be detected as this is a UUID
		"name": "Generic",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"secret": "3kJnB7gH9pLqX1ZsV4tUvWxY2aBcD5fGiJkLmN9OpQrStUvWxY1z3bC5eFgH7"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false,
		"hexkey": "#ADCc49"
	}]

Detector: gengo_gengo_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Gengo",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"gengo_key": "1aBcDeFgHiJkLmNoPqRsTuVwXyZ1234567890abcdefgHIJKLMNOpqRSTUVWXY=~",
			"gengo_secret": "2bCdEfGGHiJkLmNoPqRsTuVwXyZ1234567890abcdefgH^JKLMNOpq@STUVWXYZ$ "
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: geoapify_geoapify_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Geoapify",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"geoapify_secret": "ac6yw6nhgqz7pjgk23llmig3fttl3ssk"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: geocode_geocode_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GeoCode",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"geocode_secret": "f0xlcqbhbzr773i6ngyl98u373wq"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: geocodify_geocodify_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GeoCodify",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"geocodify_secret": "xgfu00jv0d9oz8svj9uvmuzqveuesdkfafthbxsj"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: geocodio_geocodio_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GeoCodio",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"geocodio_key": "ar71u7xpxt0rlecmb5iree5mjroggsf6l2kzf92",
			"geocodio_secret": "ftn+YYXO"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: geoipifi_geoipifi_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Geoipifi",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"geoipifi_secret": "jd65TO4gFe3ZHb0_6e7lllifgYXLsJLV"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: getemail_getemail_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Getemail",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"getemail_secret": "oOJbzObT5MI0tBNEbTV8"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: getemails_getemails_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Getemails",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"getemails_key": "fhy0w66kd5ed2fjadegmb5ok50",
			"getemails_secret": "4-mc01babzbuqkjq8c"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: getgeoapi_getgeoapi_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GetGeoAPI",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"getgeoapi_secret": "yxpckx30ido57mz9uboa3k8nf0kfv8cz858kxavh"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: getgist_getgist_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GetGist",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"getgist_secret": "N8Br7K+jbDiuLtKWw9Jd1Gr3OvC+vNSJYkGEmVYWduJ6tDmSaX0r3iWmUZT6cfWC=31u"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: getresponse_getresponse_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GetResponse",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"getresponse_secret": "d5ru70ibb2c63a1z7vh5l6b9ou8rot29"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: getsandbox_getsandbox_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GetSandbox",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"getsandbox_secret": "jovt715yi8nrre8-6ftll7p9g8fik8jxjmbghpfm",
			"getsandbox_key": "fx4x62tc7y05nz8t1h"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: github_v1_github_old_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Github",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"github_secret": "abc123def4567890abcdef1234567890abcdef12"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: github_v2_github_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Github",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"github_secret": "ghs_RWGUZ6kS8_Ut7PbtR72k2miJwwYtxkpe8mOpT8feAWYZcwz43PxBVGCNATnycaQV9VUlPJe1uST5Xen7d3uZ5lilVlEVvT9AbxnhURdT3OzPtCvXydIrvE4LrDO"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: githubapp_githubapp_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GithubApp",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"githubapp_key": "456731",
			"githubapp_secret": "-----BEGIN RSA PRIVATE KEY----- Rg8Tc1jrjetAy G+zTXJG+iTiGMZLmwHSO49LMIAnMHZYUJcXpxFw Y+ -----END RSA PRIVATE KEY-----"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: gitlab_v1_gitlab_v1_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Gitlab",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"gitlab_secret": "oXCt4JT2wf1_WlZl2OVG"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: gitlab_v2_gitlab_v2_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Gitlab",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"gitlab_secret": "glpat-W6fYSu70dPEo5w_SwbHWgQ"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: gitter_gitter_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Gitter",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"gitter_secret": "tksznjt2cw6zwrrpbrryjah13g0wteb0j5ljlj7j"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: glassnode_glassnode_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Glassnode",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"glassnode_secret": "g7ms7BebQFCDMgIMcBBupn25iUd"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: gocanvas_gocanvas_test.go
  validPattern: Abc123+/Xyz456mnopQRStuvw89YZ12345678ABad6C= / gocanvasemail = testuser1005@example.com
  invalidPattern: abcD123efg456HIJklmn789OPQ_rstUVWxYZ-012/testing@go

Detector: gocardless_gocardless_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GoCardless",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"gocardless_secret": "live__cH1Sorzhk0st1wlWeIdJpHY32hkgTsvk3SxojnY"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: godaddy_v1_godaddy_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GoDaddy",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"godaddyKey": "2TM44WqB21o4zH_3xM44WkB21i4zHHhXSoHjO",
			"godaddySecret": "3xM44WkB21i4zHHhXSoHjO",
			"not_godaddySecret": "2TM44WqB21o4zH$3xM44WkB21i4zHHhXSoHjO"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: godaddy_v2_godaddy_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GoDaddy",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"godaddyKey": "2TM44WqB21o4zH_3xM44WkB21i4zHHhXSoH",
			"godaddySecret": "3xM44WkB21i4zHHhXSoHjO",
			"not_godaddySecret": "2TM44WqB21o4zH@3xM44WkB21i4zHHhXSoH"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: goodday_goodday_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GoodDay",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"goodday_secret": "473jyn60qcqsbiesfgx8vpu1io0faj6s"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: googleoauth2_googleoauth2_access_token_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GoodDay",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"google_secret": "ya29.z0o2793q5q5uf7h6vgcd7q14rw2o1ljoeejvuvm0jqxmki2os_ri8wfsjpV"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: grafana_grafana_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Grafana",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"grafana_secret": "glc_gnVF057+C0x9J+QwzC5JXb5uQ/WSzn98X/iIrZXKaA3Hh+lum0XBRcu56qMlW7ZaxXrNt33XoI3CXz7IRPci="
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: grafanaserviceaccount_grafanaserviceaccount_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GrafanaServiceAccount",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"grafana_secret": "glsa_HU0WvVk_sl4PunHK8JtC7U6fywRm3FJuEFJwct3qi",
			"domain: "1VV04Zn7iJ0B8w2nBWqG5rB-dVUL3ELSE0zMqnMHjWp-AecPbpdwSde.grafana.net"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: graphcms_graphcms_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GraphCMS",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"secret": "eyQLdHMLjpK5snSPYf6ZCiXXxQRlie2wMITSkTjuzywCiga696mNUt2k2nEL4mv70CKQD9STxcN@eyr4kx6eWKut5zTR6Ei9o94jSCNWjkjQgYoD1pihdbTrr0sHys5uSHOUtiICAtcgsXjewxjyHvro9JYMClVEiGMQoxRC8d1NKfChOjrSO2unumWMsSMSgoA1KQLlHXd0efLuN94KiA3tjLN2Om8SsvLrk29LTPhaQYMvyx02x4IPjLlcHLqSt7cSVUqOe0uGxyIGyzsT7wx9PT56zbieLhRmO697zwyuiN4LpCccP7PuJB9qjz9AofCvgP8TJNsUZdwqcLFiyYTmZQ66Tn9Vpa1IJIdp2oq6izYegl49PDQtuP60A5O7xS7wV5QnFrkqmQkj7WeDUAtRECfTSgfFuXYLPwfYD7cYkfBRC7I1sdnH5tV1R4YEizugtQR5FhVeXHJJkfa-eNjLX9rUsnUNEJTvHOkiyjPvJkUfYzbJMUEVAjIhzny9V04DfnCh7l1mrVM0s_dpUP4fEmAe5fJjDHOMpvtZar0AByzBRpac9Rih0eWpbrMv7sNXh3d9pRPf-AtzCyKqzQ25_FJ6J6wN2evxXnqV4KhSmRTkaaNra4jsF3Sh8cMVYN-jAV6UBeKdSSLcFpjhlnVD6y59PnxFxbL7lj4UxVql3GpqnuKdd3MjN9OOQW2oqI8fd7_I8-vNwowWIuh4K5J0MbBIHCCgvqvdfPEHv4tBKFaj71zcEiDwOQJNxtL-kU_xTpcij9Rq5gnSRufQo1D932wSEe4NrHjZJhJu5qjtR1VC1dujLotyZvYhlyFJ22Lr2Tj5btj-VNjZeCJuv3QcQwR7mSI23O1e1_ESHnYkq4EMd17EIVWucgGZ1jZxGURTAU2bNJMDYUuramusFKAPtaL9i2uVDMQNukiWQI3fIrkOFguGnsCksOSWx80pu2C7CdvhH2SpF0kVnggTcz5W2AR4HPKu4645wBAY_IoirLUcCeKCjWTRJBH2kanqUCweHHU1qRSHncvYdkm0TRGkjpewoZs6JNpxc0WzClIatcVKOAbak3SKLULu28y5b-eIY_x2vqgYmjVZKsjqiQpJblkrRpJsnj3w0-B",
			"graphcms_id": "trevo1rp5egljk1vwk83enlti"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: graphhopper_graphhopper_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GraphHopper",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"graphhopper_secret": "9g-iiavt5bqwuhsa0bjysb2pmmfo45tl5nd1",
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: groovehq_groovehq_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Groovehq",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"groove_secret": "EvzL6XcOKE8B6xgNmjKTuMEY7ArutucifFovqGBvIGzJkujaSXNP9LNZc76u1aHw",
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: groq_groq_test.go
  testPatterns:
    input: groq_token = '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'
    want: "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"

Detector: gtmetrix_gtmetrix_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GtMetrix",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"gtmetrix_secret": "79f713655fe19fc451b4ae9e8e8e2fb9",
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: guardianapi_guardianapi_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GuardianAPI",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"guardian_secret": "rxawb8sz-irp5-8h6v-bjpz-hi7opod7tiha",
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: gumroad_gumroad_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "GumRoad",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"gumroad_secret": "vLw0TtejX72pb01VM-KrPlLYLABt3lXnIOR32qvxKB9",
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: guru_guru_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Guru",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"guru_user": "434EWv@Z7KcKlP6M5FO0",
			"guru_secret": "v7zypoou-t6ld-uq7a-qsmm-j3y1mh0w5cf1"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: gyazo_gyazo_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Gyazo",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"gyazo_secret": "bWDRu8itsUDI1zfOdfE6RnrDJPVeq0Ox1bGTKoi0IjP"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: happyscribe_happyscribe_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "HappyScribe",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"happyscribe_secret": "6vEt7Yfgm8nkZ5AM4CvBHPbD"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: harvest_harvest_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Harvest",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"harvest_id": "504290",
			"harvest_secret": "zzMNPeWUbYTyfK1Vltc4Mue_KXL5OyMc28P28L46DdFspGC0j0_Pim090czbJ5bnio64GoK7hEi8am8V_XL8Ai2z_90EVll9c"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: hellosign_hellosign_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "HelloSign",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"hellosign_secret": "GKo-dMdrgu6KKy0eE8pwoDEQ2P9zQmuQQrPLNXg6FL5qeB-MVpBhesz6y6bZqu5t"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: helpcrunch_helpcrunch_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "HelpCrunch",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"helpcrunch_secret": "TDV4P0BqcSgI8ZX-GK0o5GbC0-N12GG1thviz6TLRjQxGQSQha+WO78Qz9lMcNvVQ1doHalcElenPD4QoVnZgfEMk2=OOL5-bit2wxH+ykI97mG3jAMhxd5yBm+xMdE8FCdFXQfDPblQ3CjKJBDCfQQNxE+6LkQqS7CoiX2RnlJV8a0ztpe54hHgfirH8oyz=YOvBu9p+FPAj3zv9Ph4W/rV63yPoJsE0l9SLbcCF8uQz/ot1epzk5aqXb-UtZ7WEKApQJO+gEptNV=ylZKceF2KN7irbtmsmKeW0Mf12quDqqj+Yd4zMP3C1wEodnOm9RSofIEX"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: helpscout_helpscout_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "HelpCrunch",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"helpscout_secret": "s442c6leu1e5hylj9ad0pouy2jphw42iyb54798e"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: hereapi_hereapi_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "HereAPI",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"hereapi_secret": "Lyg1xguJ4xkBHc2SO0yLUYUzpc9EzlnalubYW7DXQr8"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: heroku_heroku_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Heroku",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"heroku_secret": "bAf8bA7d-7088-07ce-3f87-7ec21653297d"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: hive_hive_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Hive",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"hive_id": "F1j6zMpLLcwZC3HM8",
			"hive_secret": "9b0mxjwzazdwjqvre1fj5ghy6gfw3nsy"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: hiveage_hiveage_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Hiveage",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"hiveage_secret": "nbBeM021WOTqocvdbBXR"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: holidayapi_holidayapi_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "HolidayAPI",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"holidayapi_secret": "2l094-ldfa8kc3kxn4v6976q76k8z7h1hdro"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: holistic_holistic_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Holistic",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"holistic_secret": "5a65a90cd2dfa75cf21eeb16bb828bcec1911ebe0a2a11942b9d8be17261be1e"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: honeycomb_honeycomb_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "HoneyComb",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"honeycomb_secret": "kZKcr8xUYHJQajRYQLuT8x"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: host_host_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Host.IO",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"host_secret": "cxr9i4q59p9za6"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: html2pdf_html2pdf_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Html2Pdf",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"html2pdf_secret": "oFLqoMgM6I3h8WKYykz1zG86B4rR7wuPXYMKheO3jhuSzPz1B77HBorb18gV7dDv"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: hubspot_apikey_v1_apikey_test.go
  testPatterns:
    input: // const hapikey = 'b714cac4-a45c-42af-9905-da4de8838d75';
const { HAPI_KEY } = process.env;
const hs = new HubSpotAPI({ hapikey: HAPI_KEY });
    want: "b714cac4-a45c-42af-9905-da4de8838d75"
    input: curl https://api.hubapi.com/contacts/v1/lists/all/contacts/all \
		//--header
    want: "b71aa2ed-9c76-417d-bd8e-c5f4980d21ef"
    input: const hs = new HubSpotAPI(
    want: "76a836c8-469d-4426-8a3b-194ca930b7a1"
    input: 'hubspot' => [
	       // 'api_key' => 'e9ff285d-6b7f-455a-a56d-9ec8c4abbd47',         // @ts dev
    want: "e9ff285d-6b7f-455a-a56d-9ec8c4abbd47"
    input: [{
    want: ""

Detector: hubspot_apikey_v2_apikey_test.go
  testPatterns:
    input: const private_app_token = 'pat-eu1-1457aed5-04c6-40e2-83ad-a862d3cf19f2';

app.get('/homepage', async (req, res) => {
    const contactsEndpoint = 'https://api.hubspot.com/crm/v3/objects/contacts';
    want: "pat-eu1-1457aed5-04c6-40e2-83ad-a862d3cf19f2"
    input: hubspot:
   api:
      url: https://api.hubapi.com
      auth-token: pat-na1-ffbb9f50-d96b-4abc-84f1-b986617be1b5
   subscriptions:
    want: "pat-na1-ffbb9f50-d96b-4abc-84f1-b986617be1b5"

Detector: huggingface_huggingface_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "HuggingFace",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"huggingface_secret": "hf_ZY1eSxaQdNSh6LSV1T1xkZ114inIxE57YK"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: humanity_humanity_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Humanity",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"humanity_secret": "ys64ge0rcytbpzccvgat1p9ja2g94oe5ofnrkp5f"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: hunter_hunter_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Hunter",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"hunter_secret": "680o5ujd5r32jp2jf3s_xkhf8ls_99_oux07efq_"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: hybiscus_hybiscus_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "Hybiscus",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"hybiscus_secret": "gwM2c9pbPbM05OvhCZmStknNow5Ay0pWuxwG6HaAq9x"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: hypertrack_hypertrack_test.go
  validPattern: [{
		"_id": "1a8d0cca-e1a9-4318-bc2f-f5658ab2dcb5",
		"name": "HyperTrack",
		"type": "Detector",
		"api": true,
		"authentication_type": "",
		"verification_url": "https://api.example.com/example",
		"test_secrets": {
			"hypertrack_account: "7SzoSsoaDY-NMc9d4b-IbJm1sn1",
			"hypertrack_secret": "skVh58q2vSjeMPbyicWsyyxJ20NHu3WWj2lR0XnfwScEHO48CR96vV"
		},
		"expected_response": "200",
		"method": "GET",
		"deprecated": false
	}]

Detector: ibmclouduserkey_ibmclouduserkey_test.go
  validPattern: 0y0tceatuuwnIqFvzpfvb8Td6-07esplajvPznSvizma
  invalidPattern: A0y0tceatuuwnIqFvzpfvb8Td6-07esplajvPznSvizmaF

Detector: iconfinder_iconfinder_test.go
  validPattern: g48QWZXPpNeQjaUghu3aqKTxqcMtjVoY94Fv0lkYj4EGpbXTHd2GjbhWZ2uTmZLa
  invalidPattern: g48QWZXPpNeQ-aUghu3aqKTxqcMtjVoY94Fv0lkY-4EGpbXTHd2GjbhWZ2uTmZLa

Detector: iexapis_iexapis_test.go
  validPattern: sk_d21e2be3622049c7809f95cc02313821
  invalidPattern: sg_h21e2be3622049c7809f95cc02313821

Detector: iexcloud_iexcloud_test.go
  validPattern: sk_e51a4bf78d4c4c6ab906bac4c783cb91
  invalidPattern: Ask_e51a4bf78d4c4c6ab906bac4c783cb91F

Detector: imagekit_imagekit_test.go
  validPattern: cHJpdmF0ZV9vNlM5MGxtbVE2Z0ZLbHFLS0xh
  invalidPattern: -HJpdmF0ZV9vNlM5MGxtbVE2Z0ZLbHFLS0xh

Detector: imagga_imagga_test.go
  validPattern: 2Lnr2CqKYvAzUrQ7mv0twEviqSq03Zq=w0F7EOJvY30J8oj5KSQZVxQmW5UYUI7bEEdjhmDK
  invalidPattern: 2Lnr2CqKYvAzUrQ7mv0twEviqSq03Zq=w0F7EOJvY30J8oj5KSQZVxQmW5UYUI7bEEdjhmD

Detector: impala_impala_test.go
  validPattern: 2MitCEv5ZAguR57EJkD7deNBssSC0lNr897akiBb9cEMoi
  invalidPattern: 2MitCEv5ZAguR57EJkD7deNBssSC0lNr897akiBb9cEMo

Detector: infura_infura_test.go
  validPattern: 8vr0j5458z4xq57qkozagbt2l6nnjetq
  invalidPattern: 8vr0j5458z4xq57qkozagbt2l6nnjet

Detector: insightly_insightly_test.go
  validPattern: 9ytdevl7jl75ylv06jx1m3qzktlr0x89m8fr
  invalidPattern: 9ytdevl7jl75ylv06jx1m3qzktlr0x89m8f

Detector: instabot_instabot_test.go
  validPattern: 7tB=6ZFzMLh7npsKURT3wqCRE0lAAn/4bLgkuR7Q=IFt
  invalidPattern: 7tB=6ZFzMLh7npsKURT3wqCRE0lAAn/4bLgkuR7Q=IF

Detector: intercom_intercom_test.go
  validPattern: dG9rOmE2EzJhNmQwXzdsOpFfNDcxNV84GPU2XzMnMWRiYTIxOTc2ZDevLcB=
  invalidPattern: m2=L&7-I2',Ei.pC16@~s<w<r:7UeE2?jZ<l(<YdCLq,8<^o#v8woZ7wpv]=

Detector: interseller_interseller_test.go
  validPattern: 7e1e818a-2bc5-5042-5b5d-8bf2465e1d81
  invalidPattern: 7e1e818a-2bc5-5042-5b5d-8bf2465e1d8

Detector: intrinio_intrinio_test.go
  validPattern: RgqgmHdKJ4nQD7jk4whnZe6iox2sHSbcQf4UaLYE2UAw
  invalidPattern: RgqgmHdKJ4nQD7jk4whnZe6iox2sHSbcQf4UaLYE2UA

Detector: ip2location_ip2location_test.go
  validPattern: UBENM81QDKGJ7GHB6Q68L2B4Z06DO3YD
  invalidPattern: UBENM81QDKGJ7GHB6Q68L2B4Z06DO3Y

Detector: ipapi_ipapi_test.go
  validPattern: af6dmku2agtwytrdfxxyf3gcszoa6one
  invalidPattern: af6dmku2agtwytrdfxxyf3gcszoa6on

Detector: ipgeolocation_ipgeolocation_test.go
  validPattern: 08blecim3dji81ott4ipeh7kk3mcqs9f
  invalidPattern: 08blecim3dji81ott4ipeh7kk3mcqs9

Detector: ipinfo_ipinfo_test.go
  validPattern: 3ff77bb6fe6885
  invalidPattern: 3ff77bb6fe688

Detector: ipinfodb_ipinfodb_test.go
  validPattern: 5n2gzgwp07ttl1gsizaxcdkmb0osp0eiqi39nkzqq2mqqe94jrhwvhc2lvgqkta5
  invalidPattern: 5n2gzgwp07ttl1gsizaxcdkmb0osp0eiqi39nkzqq2mqqe94jrhwvhc2lvgqkta

Detector: ipquality_ipquality_test.go
  validPattern: p1b3ref1b3gzpn15gduecwvhaat0du5k
  invalidPattern: p1b3ref1b3gzpn15gduecwvhaat0du5

Detector: ipstack_ipstack_test.go
  validPattern: FA0E2B0be2fd6076b59c8696783eadeB
  invalidPattern: FA0E2B0be2fd6076b59c8696783eade

Detector: jdbc_jdbc_test.go
  validPattern: jdbc:mysql:localhost:3306/mydatabase
  invalidPattern: jdbc:my?ql:localhost:3306/my database

Detector: jotform_jotform_test.go
  validPattern: 4q5fbhf90noexp56sxr86mhf3gAf31en
  invalidPattern: 4q5fbhf90noexp56sxr86mhf3gAf31e

Detector: jumpcloud_jumpcloud_test.go
  validPattern: ugys2uNNSDMylExbF0n4ttJrxL4ghI4YWK1nr0HM
  invalidPattern: ugys2uNNSDMylExbF0n4ttJrxL4ghI4YWK1nr0H

Detector: jupiterone_jupiterone_test.go
  validPattern: k62e5DggsqyrvjehnWM11M6h4kznOBmLYPcV1MfjNOncXis7cX90yAUyNXnlGNld1KT8iHYZoQxm
  invalidPattern: k62e5DggsqyrvjehnWM11M6h4kznOBmLYPcV1MfjNOncXis7cX90yAUyNXnlGNld1KT8iHYZoQx

Detector: juro_juro_test.go
  validPattern: b2hKUaFGc0nyBmk3xRr0cyPCzRJOGW97G9WIhBtQ
  invalidPattern: b2hKUaFGc0nyBmk3xRr0cyPCzRJOGW97G9WIhBt

Detector: karmacrm_karmacrm_test.go
  validPattern: ThGCnHSUKBY9OBnpIZ59
  invalidPattern: ThGCnHSUKBY9OBnpIZ5

Detector: kickbox_kickbox_test.go
  validPattern: _DN4IVERUcAbdO2ibFCriJAyfyuaDys7u08ilesdQxON2oUsobOusDu1UFkclGq8P
  invalidPattern: ?DN4IVERUcAbdO2ibFCriJAyfyuaDys7u08ilesdQxON2oUsobOusDu1UFkclGq8=

Detector: klaviyo_klaviyo_test.go
  validPattern: pk_1234567890abcdefghijklmnopqrstuvwx
  invalidPattern: pk_1234567890abcdefghijklmnopqrstu-_=

Detector: klipfolio_klipfolio_test.go
  validPattern: 8fd61e953ce814446c36975623c3d77aa97cc35c
  invalidPattern: 8fd61e953ce814446c36975623c3d77aa97cc35

Detector: knapsackpro_knapsackpro_test.go
  validPattern: njei162j3zfnwzx97yezow5ck2fg2mr1
  invalidPattern: njei162j3zfnwzx97yezow5ck2fg2mr

Detector: kontent_kontent_test.go
  validPattern: jca9is4icbynssyi1y4spdwcbwe3vwv9jn4d
  invalidPattern: jca9is4icbynssyi1y4spdwcbwe3vwv9jn4

Detector: kylas_kylas_test.go
  validPattern: dozvko9mlnqqxg5ontcanklqzvw2-lo0jvge
  invalidPattern: dozvko9mlnqqxg5ontcanklqzvw2-lo0jvg

Detector: languagelayer_languagelayer_test.go
  validPattern: ze1z7svucm5z17kyizcve7gin44socz5
  invalidPattern: ze1z7svucm5z17kyizcve7gin44socz

Detector: larksuite_larksuite_test.go
  testPatterns:
    input: larksuite_token = 't-KkBmh6TUBIcyFAp20XXa'
    want: "t-KkBmh6TUBIcyFAp20XXa"
    input: larksuite_token = 'u-fM_lEWSNhfFqE.dZU6YZ28SRlnWR4hk59Pow05gg00DFA'
    want: "u-fM_lEWSNhfFqE.dZU6YZ28SRlnWR4hk59Pow05gg00DFA"
    input: larksuite_token = 'a-KkBmh6TUBIcyFAp20XXa'
    want: "a-KkBmh6TUBIcyFAp20XXa"

Detector: larksuiteapikey_larksuiteapikey_test.go
  testPatterns:
    input: {
    want: "cli_12345678901234562nuq0H1dZUqRpHMzKMvbbwlgNWaJiokl"

Detector: launchdarkly_launchdarkly_test.go
  validPattern: sdk-5gykyl1b-wgrq-41lc-z6q1-h7zn5fdlcybw
  invalidPattern: sdk-5gykyl1b-wgrq-41lc-z6q1-h7zn5fdlcyb

Detector: leadfeeder_leadfeeder_test.go
  validPattern: 7zy0rgEn3QnW3oGW8PCuWWlDkLOBMpz307kKsm9OJa4
  invalidPattern: 7zy0rgEn3QnW3oGW8PCuWWlDkLOBMpz307kKsm9OJa=

Detector: lemlist_lemlist_test.go
  validPattern: 24203d9f149dd02d1d944ee799cfb57e
  invalidPattern: 24203d9f149dd02d1d944ee799cfb57

Detector: lemonsqueezy_lemonsqueezy_test.go
  validPattern: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.TkOQyjzXNs1ExektRLyW2wxKeFk7VWEE0NVQwaBSKjO5EKaXBwZciTfpIPOFKupmt0PkIChZLcI8fX5XOHQK6hy1e2f7gWW0A00ixqbQUAUyfOTBXSHdrZrK6QNd9xi7q7B2m7ei3rfSipMMod7oHyxvVKwKckwcdfDlZ5OwtDy1lhBFeYZWcGiTM2qvTOWQkBMezkwhz23YONwYK2MOP0PaasJhryNui98LbiiXju20dV2tlxslqJD6i856axkolvQRhJWM7y2Jp37iDgIABh6b13LadPbWJgKiOKkrow4UyzYCrcDOQ5Y6to.c8zXA41FY2GgWUWXjwqoem5A6q46CgLicuYZ4M2XuGZ747WQz1ZmtbnLZn4nclSWLpJUEgdxQpNt8GBVBB2_3B4on1m2HkOHBqjrfn5kHuYSeR_zHNPdLXZBER4tpUPx7Dijl1T8WO6cri32vj8oM2o4ihLeFD1Ewd_OYpP-CIzC4jOKn4DFbgtr7CWaE4vf4XEFSn4B4v-XEjgjmSRDcw_a-wRXRnSZCL8UoiN9k0cMyxqXFHxfiFrMcghwFIKHt37fhHEidYh8SwJy3XdJzusRpynUtoHcpfNhgts9Ik3W7jg_HAhMvbg5XxMUYhtQty32sonozf5cVuoXUD0HOe7gbLNMxaHNT8RVYRSHTqzV1FXLdtGBsZMke-6pKuhC1erbPpLB57os6bKetCkwswk9yZI_eNi4MtR8KnhO8aeWUrz2QJUMY6xXI0a1E0yES8yxGQsSe3CHlVhGgjQuLZf9p2_30YB-yu3NIjJTkamgsaWA41H0eX_SuDci35uO
  invalidPattern: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.TkOQyjzXNs1ExektRLyW2wxKeFk7VWEE0NVQwaBSKjO5EKaXBwZciTfpIPOFKupmt0PkIChZLcI8fX5XOHQK6hy1e2f7gWW0A00ixqbQUAUyfOTBXSHdrZrK6QNd9xi7q7B2m7ei3rfSipMMod7oHyxvVKwKc.c8zXA41FY2GgWUWXjwqoem5A6q46CgLicuYZ4M2XuGZ747WQz1ZmtbnLZn4nclSWLpJUEgdxQpNt8GBVBB2_3B4on1m2HkOHBqjrfn5kHuYSeR_zHNPdLXZBER4tpUPx7Dijl1T8WO6cri32vj8oM2o4ihLeFD1Ewd_OYpP-CIzC4jOKn4DFbgtr7CWaE4vf4XEFSn4B4v-XEjgjmSRDcw_a-wRXRnSZCL8UoiN9k0cMyxqXFHxfiFrMcghwFIKH

Detector: lendflow_lendflow_test.go
  validPattern: RODlvb3v108LswHD7gCZcyHdCIK8T90Hgg12.VF24VyD6akOZS1NmAZ4tVRmtyhyLeNELvCqZnBuiAtJqyMUN2JQHC6vQgzrcAMwPglMjiAZ8gBPIVsQSRiHDvJA89BPQpjAOCxGQynOoSvECoSH5WCldSnl8lN0BNKyeK9J0DSKitEaS9G00qVY9emKcNEQWCWXZeZXLsDXReCcOUEr1Cmi1tpsueqxT34TG4zvaPa2npM10TCKLqKsJrdfZL4oWtZVnZob0QBBkU7k.nQcGbtHUBtYXGUIQYZ1Et1ROaE4Rg0gM-Kw3YtvcVgoV5ro02tydPtPGqSAzf5SBt3LYqQriHmcmW5cx-tASACVQwoT1dpJtxrUP1sa5mHuvstgxDFVe1DxDpMjXYVNL3immaAxqnD6NHs4FzKdNvXvz7p969aIe9q7YdpdyDbFL6x2FINKkqrJ2uMIUNvECITzDjHLGQP3hDcbfJUQ47bDAi3XpbqtFhZTlDd29VwxfEMoA3xi-6rKIS9xXsRxCsLdEt3mhwIxEW89oXKLFHxjXYMGNvl-91H2hw0TIvhzXJHrG3VE1NKXq9E1WoC6OfQPa7qV-lz26nq1jGSW7ENR9HWfc4ppiHj20PGczp6YZPRUIbaTcrOi64F09uOKLInZCIIKI94-bqjlEK5dAune7Fm8pmRqOUPIEnRydJi4ilWiG2cm1xDgU4nb3F507dsjHVi-V0TFyrI-69lrF0TEh7jb8sBjU6yusaRGdannDKBFSnz2d3LVVAn7udGuk2ZNIjYi6equNRYhQ3wJnKQCGIqLaGGQdgH9ILiDB0T9e5aED0taqYpvMFgby6UJGJeNatazX1KMj1NMwMWd3ZIBia7Dlc1lkbWlePlQEh2mZTBcOsvh7lOzLmIu1NKDzByZI3VUhKq5wY3JXJdGeiD3EBPphUt5eaz9Mt0nrK8J
  invalidPattern: ?ODlvb3v108LswHD7gCZcyHdCIK8T90Hgg12.VF24VyD6akOZS1NmAZ4tVRmtyhyLeNELvCqZnBuiAtJqyMUN2JQHC6vQgzrcAMwPglMjiAZ8gBPIVsQSRiHDvJA89BPQpjAOCxGQynOoSvECoSH5WCldSnl8lN0BNKyeK9J0DSKitEaS9G00qVY9emKcNEQWCWXZeZXLsDXReCcOUEr1Cmi1tpsueqxT34TG4zvaPa2npM10TCKLqKsJrdfZL4oWtZVnZob0QBBkU7k.nQcGbtHUBtYXGUIQYZ1Et1ROaE4Rg0gM-Kw3YtvcVgoV5ro02tydPtPGqSAzf5SBt3LYqQriHmcmW5cx-tASACVQwoT1dpJtxrUP1sa5mHuvstgxDFVe1DxDpMjXYVNL3immaAxqnD6NHs4FzKdNvXvz7p969aIe9q7YdpdyDbFL6x2FINKkqrJ2uMIUNvECITzDjHLGQP3hDcbfJUQ47bDAi3XpbqtFhZTlDd29VwxfEMoA3xi-6rKIS9xXsRxCsLdEt3mhwIxEW89oXKLFHxjXYMGNvl-91H2hw0TIvhzXJHrG3VE1NKXq9E1WoC6OfQPa7qV-lz26nq1jGSW7ENR9HWfc4ppiHj20PGczp6YZPRUIbaTcrOi64F09uOKLInZCIIKI94-bqjlEK5dAune7Fm8pmRqOUPIEnRydJi4ilWiG2cm1xDgU4nb3F507dsjHVi-V0TFyrI-69lrF0TEh7jb8sBjU6yusaRGdannDKBFSnz2d3LVVAn7udGuk2ZNIjYi6equNRYhQ3wJnKQCGIqLaGGQdgH9ILiDB0T9e5aED0taqYpvMFgby6UJGJeNatazX1KMj1NMwMWd3ZIBia7Dlc1lkbWlePlQEh2mZTBcOsvh7lOzLmIu1NKDzByZI3VUhKq5wY3JXJdGeiD3EBPphUt5eaz9Mt0nrK8J

Detector: lessannoyingcrm_lessannoyingcrm_test.go
  validPattern: xiPi5OZDPlnS6WmR0JropSAMlcHCSCRWVN2D1sVttofuZQpdYuPKmWD81
  invalidPattern: xiPi5OZDPlnS6WmR0JropSAMlcHCSCRWVN2D1sVttofuZQpdYuPKmWD8

Detector: lexigram_lexigram_test.go
  validPattern: FyIcB4LRVZ4iEJVky0JvzVS6yzreDuFgz8zSmfXNlWuEIE29ad6Wmc9sQtUzWBp8dV960IeSdWk5V182naPy0uAty27gdFtyl6TvCz0gJdprxKyZfNzxVeAy5Qlghzl4Ivk9jXe2p7gnafM3iUvK2vemq5FroXXgUJTZ0SHqR6QGv0wk9WGEa5aAxDUiQ91e2xI6leUbTIoxXQyF1P1rxYZswimIbGTHy6H7oMuTbXFrX3XDdphMqyHYjGlzYDfY3nREvC83XsgIlawdTV0FdPXzXxqB4ELorpo3z8kCsWm1H
  invalidPattern: =yIcB4LRVZ4iEJVky0JvzVS6yzreDuFgz8zSmfXNlWuEIE29ad6Wmc9sQtUzWBp8dV960IeSdWk5V182naPy0uAty27gdFtyl6TvCz0gJdprxKyZfNzxVeAy5Qlghzl4Ivk9jXe2p7gnafM3iUvK2vemq5FroXXgUJTZ0SHqR6QGv0wk9WGEa5aAxDUiQ91e2xI6leUbTIoxXQyF1P1rxYZswimIbGTHy6H7oMuTbXFrX3XDdphMqyHYjGlzYDfY3nREvC83XsgIlawdTV0FdPXzXxqB4ELorpo3z8kCsWm1H

Detector: linearapi_linearapi_test.go
  validPattern: lin_api_AMBNSMuZbO3NIH4EFgpBg9weewxyU8fG0u3RwEDC
  invalidPattern: lin_api_=MBNSMuZbO3NIH4EFgpBg9weewxyU8fG0u3RwEDC

Detector: linemessaging_linemessaging_test.go
  validPattern: daNigdC0Z4fsCucz3i+KzudCr26xF5EN7xsyvLYLADR+lo3KTNtNJ4B0cDw30J0Ju1HyC6oNkX/OoZniUvJTNZAVe2Jf4B+Fu3/bVvz609P0cZhpzc0VHc4bdzbBQCjv4Nz/SKZwqjfbg9DdmNwzq1i8hSimX6a+t39neP247rF
  invalidPattern: =aNigdC0Z4fsCucz3i+KzudCr26xF5EN7xsyvLYLADR+lo3KTNtNJ4B0cDw30J0Ju1HyC6oNkX/OoZniUvJTNZAVe2Jf4B+Fu3/bVvz609P0cZhpzc0VHc4bdzbBQCjv4Nz/SKZwqjfbg9DdmNwzq1i8hSimX6a+t39neP247rF

Detector: linenotify_linenotify_test.go
  validPattern: xddIUmDwi9BoOOlSVgXSzwABg5R1icstGke6gp9P85B
  invalidPattern: xddIUmDwi9BoOOlSVgXSzwABg5R1icstGke6gp9P85

Detector: linkpreview_linkpreview_test.go
  validPattern: EKHHAPdXrzqKExMfz0f1fxC1oVlDP0E4
  invalidPattern: EKHHAPdXrzqKExMfz0f1fxC1oVlDP0E

Detector: livestorm_livestorm_test.go
  validPattern: eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhcGkubGl2ZXN0b3JtLmNvIiwianRpIjoiOaFI2p8Vo2dnHiy5OxrjkJ8wRE1LW4rTyWzChczEu3lAmcD1maSawW7xKeZ1GEfjJRSelieqydpF8eVp619RMtYPGwY3XmOPrBatssI2RSBDM5srACqiTOcg3sQgkeBBtA4bUJ.O6UuKenKIAUh60CeGWQRTMVAA2JcFlvz1GRTliyZ448
  invalidPattern: eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhcGkubGl2ZXN0b3JtLmNvIiwianRpIjoiOaFI2p8Vo2dnHiy5OxrjkJ8wRE1LW4rTyWzChczEu3lAmcD1maSawW7xKeZ1GEfjJRSelieqydpF8eVp619RMtYPGwY3XmOPrBatssI2RSBDM5srACqiTOcg3sQgkeBBtA4bUJ.O6UuKenKIAUh60CeGWQRTMVAA2JcFlvz1GRTliyZ448

Detector: loadmill_loadmill_test.go
  validPattern: YbQOeyGBV5J1ri9hUGn5WfRfZrmGGQRWQblsyesK
  invalidPattern: YbQOeyGBV5J1ri9hUGn5WfRfZrmGGQRWQblsyes

Detector: lob_lob_test.go
  validPattern: XUTbwiuF1_qmP5BvXi4hMeDafM2VoNz5yMH__rI5
  invalidPattern: XUTbwiuF1_qmP5BvXi4hMeDafM2VoNz5yMH__rI

Detector: locationiq_locationiq_test.go
  validPattern: pk.yRfkay-UQ1g6ywFnbsJT3IhS1U-Rdhtf
  invalidPattern: pk.yRfkay-UQ1g6ywFnbsJT3IhS1U-Rdht

Detector: loginradius_loginradius_test.go
  validPattern: fb4e966d-7321-6974-b2e7-2525a9554d6f
  invalidPattern: fb4e966d-7321-6974-b2e7-2525a9554d6

Detector: logzio_logzio_test.go
  validPattern: s1k5frmd-hqx6-h27w-oho2-2jv1k7ww5k48
  invalidPattern: s1k5frmd-hqx6-h27w-oho2-2jv1k7ww5k4

Detector: lokalisetoken_lokalisetoken_test.go
  validPattern: c4ebwpmg9id4vk1kj6skeatz3wdsl5gl62imf9we
  invalidPattern: c4ebwpmg9id4vk1kj6skeatz3wdsl5gl62imf9w

Detector: loyverse_loyverse_test.go
  validPattern: g7w41cfy8n6z7mrlku18wouolg9dt0nh
  invalidPattern: g7w41cfy8n6z7mrlku18wouolg9dt0n

Detector: lunchmoney_lunchmoney_test.go
  validPattern: c7d3c5b3bb87a43f6ecb66b93b467248a7914b9c8bbe135d3d
  invalidPattern: c7d3c5b3bb87a43f6ecb66b93b467248a7914b9c8bbe135d3

Detector: m3o_m3o_test.go
  validPattern: Li0HPrJXNlfTJ93qOz606jBnnPpetC4M7ni5i5SRdL9kDA7Z
  invalidPattern: Li0HPrJXNlfTJ93qOz606jBnnPpetC4M7ni5i5SRdL9kDA7

Detector: madkudu_madkudu_test.go
  validPattern: 2c57b42d056b3409b664000fec80af90
  invalidPattern: 2c57b42d056b3409b664000fec80af9

Detector: magicbell_magicbell_test.go
  validPattern: abcde12345-67890fghijklmnopqrs-tuvwxyzYu/ magicbell_email = testuser1005@example.com
  invalidPattern: abcde12345-67890fghijklmnopqrs#tuvwxyz/testing@go

Detector: magnetic_magnetic_test.go
  validPattern: n8825xxn-pc8e-t4ri-62bo-as2laynut4lu
  invalidPattern: n8825xxn-pc8e-t4ri-62bo-as2laynut4l

Detector: mailboxlayer_mailboxlayer_test.go
  validPattern: n0rsfta3vmx8fgdnvx6qmzlfbzr1ras2
  invalidPattern: n0rsfta3vmx8fgdnvx6qmzlfbzr1ras

Detector: mailchimp_mailchimp_test.go
  validPattern: eda4fd37283490e9d99bcd633627063c-us5
  invalidPattern: eda4fd37283490e9d99bcd633627063c-us

Detector: mailerlite_mailerlite_test.go
  validPattern: 5avyoep7wl6gua2edxnd6d9bk9up8tp6
  invalidPattern: 5avyoep7wl6gua2edxnd6d9bk9up8tp

Detector: mailjetbasicauth_mailjetbasicauth_test.go
  validPattern: 49mCNOTU9XTijsrY1QjHFkfjxy9KkCA0g3KuZPTujdKStmVgarAqe2vZvchjuzIEyOjOcANYiZhGnStpSfg5p5i=
  invalidPattern: 49mCNOTU9XTijsrY1QjHFkfjxy9KkCA0g3KuZPTujdKStmVgarAqe2vZvchjuzIEyOjOcANYiZhGnStpSfg5p5i

Detector: mailjetsms_mailjetsms_test.go
  validPattern: EGeBEbLBwAdeY9ectt6hwNKAu2rUEeBw
  invalidPattern: EGeBEbLBwAdeY9ectt6hwNKAu2rUEeB

Detector: mailmodo_mailmodo_test.go
  validPattern: D5OZWF8-QBDDBEL-14Z7B49-AHZ06BF
  invalidPattern: D5OZWF8-QBDDBEL-14Z7B49-AHZ06B

Detector: mailsac_mailsac_test.go
  validPattern: k_0Jzm3Vsm2Lm9z3OomKv2Bn1TScRhoKfX1OJk0Oezz6W0nCSLsaXb7XJ0B8ElHnUzASzffdL7LIzhSCWPOqScIG
  invalidPattern: ?_0Jzm3Vsm2Lm9z3OomKv2Bn1TScRhoKfX1OJk0Oezz6W0nCSLsaXb7XJ0B8ElHnUzASzffdL7LIzhSCWPOqScIG

Detector: mandrill_mandrill_test.go
  validPattern: z8A3Owe1WRrHmg4AHQZlwK
  invalidPattern: z8A3Owe1WRrHmg4AHQZlw

Detector: manifest_manifest_test.go
  validPattern: 0Nubbkxtphh1c3YHbmB8MipsgpbmczRT
  invalidPattern: 0Nubbkxtphh1c3YHbmB8MipsgpbmczR=

Detector: mapquest_mapquest_test.go
  validPattern: l8FuOZVcR9DMCukVKAVXHAUx9LmquzuZ
  invalidPattern: l8FuOZVcR9DMCukVKAVXHAUx9Lmquzu

Detector: marketstack_marketstack_test.go
  validPattern: 5f6g9mh0zl6awmdyx8gjnkn1ybuqrvfv
  invalidPattern: 5f6g9mh0zl6awmdyx8gjnkn1ybuqrvf

Detector: mavenlink_mavenlink_test.go
  validPattern: e18w9n0upom99bzram7826tce87yp3d4mulnicn8eballopb2xh4r8m8da2p7bus
  invalidPattern: e18w9n0upom99bzram7826tce87yp3d4mulnicn8eballopb2xh4r8m8da2p7bu

Detector: maxmindlicense_v2_maxmindlicense_v2_test.go
  testPatterns:
    input: #cd /home/xtreamcodes/iptv_xtream_codes/
#wget
    want: "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"
    input: BASE_URL=https://plausible.example.com
SECRET_KEY_BASE=GLVzDZW04FzuS1gMcmBRVhwgd4Gu9YmSl/k/TqfTUXti7FLBd7aflXeQDdwCj6Cz
TOTP_VAULT_KEY=dsxvbn3jxDd16az2QpsX5B8O+llxjQ2SJE2i5Bzx38I=
MAXMIND_LICENSE_KEY=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
MAXMIND_EDITION=GeoLite2-City
GOOGLE_CLIENT_ID=...
    want: "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"
    input: # LicenseKey is from your MaxMind account
LicenseKey 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
    want: "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"

Detector: meaningcloud_meaningcloud_test.go
  validPattern: srs9jhxnzvodflr77ze5ela384fwx3gr
  invalidPattern: srs9jhxnzvodflr77ze5ela384fwx3g

Detector: mediastack_mediastack_test.go
  validPattern: 3cadij78xzo69hzopa70dtqfjivd497o
  invalidPattern: 3cadij78xzo69hzopa70dtqfjivd497

Detector: meistertask_meistertask_test.go
  validPattern: dFZqvIPCmhFhwNuGSZyboxnWjFLrzDrSimrUF8UaYbY
  invalidPattern: dFZqvIPCmhFhwNuGSZyboxnWjFLrzDrSimrUF8UaYb

Detector: meraki_meraki_test.go
  validPattern: Information used in API calls for meraki
Variable name | Initial Value
apiKey |e9e0f062f587b423bb6cc6328eb786d75b45783e
baseUrl |https://api.meraki.com/api/v1
organizationId |646829496481091262
networkId |L_646829496481117067
serial |
  invalidPattern: 001A1E0092C7a711d7679d%d0d442d59b05ce65D

Detector: mesibo_mesibo_test.go
  validPattern: Q07RXEk41f4vgUqGsYu1AZJSLheG42pgyna2lf12FomyL1w80ZBfDL9f6Mbb66JU
  invalidPattern: Q07RXEk41f4vgUqGsYu1AZJSLheG42pgyna2lf12FomyL1w80ZBfDL9f6Mbb66J

Detector: messagebird_messagebird_test.go
  validPattern: w9BKrNMo9pO-mkKpUr9i7ypGd
  invalidPattern: w9BKrNMo9pO-mkKpUr9i7ypG

Detector: metrilo_metrilo_test.go
  validPattern: yzmil2yrmu5qfd09
  invalidPattern: yzmil2yrmu5qfd0

Detector: microsoftteamswebhook_microsoftteamswebhook_test.go
  validPattern: https://uQu9muaokn.webhook.office.com/webhookb2/8IoQDUDl-eqlp-q0zl-tlhi-HTxVfS864oTv@b4infsZa-qpMp-wOV0-T-3g-44wVII0y5vF6/IncomingWebhook/SnuHwf1vaX7oNK32hSnCcLSNYFD8qtfW/uiqxkMLH-gw-a-RxJ7-9rpT-3W85tSlbX4nv
  invalidPattern: https://uQu9muaokn.webhook.office.com/webhookb2/8IoQDUDl-eqlp-q0zl-tlhi-HTxVfS864oTv@b4infsZa-qpMp-wOV0-T-3g-44wVII0y5vF6/IncomingWebhook/SnuHwf1vaX7oNK32hSnCcLSNYFD8qtfW/uiqxkMLH-gw-a-RxJ7-9rpT-3W85tSlbX4n

Detector: mindmeister_mindmeister_test.go
  validPattern: yXzajuNRDuuophXvznVAnzPO7lIFOd8RAAAzsSwZ79z
  invalidPattern: yXzajuNRDuuophXvznVAnzPO7lIFOd8RAAAzsSwZ79

Detector: miro_miro_test.go
  validPattern: 1S9ppaQalVHeB3rGJRjNJ7G0HEA
  invalidPattern: 1S9ppaQalVHeB3rGJRjNJ7G0HE

Detector: mixmax_mixmax_test.go
  validPattern: en0h_MAbEdRtEPRN-3CDREyU2E9s2lhogDbZ
  invalidPattern: en0h_MAbEdRtEPRN-3CDREyU2E9s2lhogDb

Detector: mockaroo_mockaroo_test.go
  validPattern: mlm9iqkm
  invalidPattern: mlm9iqk

Detector: moderation_moderation_test.go
  validPattern: JZxuB8KrC1jO7tANvLp2D6oWF5Mq9yBaL3Hg.PZxyW0aTuBvNcK9rfsav3Lm1jOq8Fg2DtE7oX5uAM3yBC4HsQqLmN5aQ9vWjvNcK9Sfv45rLmvNcK9rLBC4m2yB8oC3uD7tda14E6rAf0gHsMJdLnOp.JZxuB8KrC1jO7tANvLp2D6oWF5Mq9yBaL3HgEpX1zK4
  invalidPattern: =ZxuB8KrC1jO7tANvLp2D6oWF5Mq9yBaL3Hg.PZxyW0aTuBvNcK9rfsav3Lm1jOq8Fg2DtE7oX5uAM3yBC4HsQqLmN5aQ9vWjvNcK9Sfv45rLmvNcK9rLBC4m2yB8oC3uD7tda14E6rAf0gHsMJdLnOp.JZxuB8KrC1jO7tANvLp2D6oWF5Mq9yBaL3HgEpX1zK4

Detector: monday_monday_test.go
  validPattern: eyJ4tw1Jd1PM49YlUdnNZGN3zlQ3HnKpTT2Nf6WPEPuPP_ZyH37eh.eyJE8Rw930nGgPXjJFKD0LHFqyaEg1yEFxTCGBTWiI9aPsWdrg4iR_DLit6QOeUN7I_Qgm3Wrl5udWmh3n3Gy-x5UCbuuEWnVugOJH0.pH9QMElnn4DhIkvdaVxRaa_g12E3tfV4LSTgXI7WWjs6BtdPu8l6GL5s3
  invalidPattern: ?yJ4tw1Jd1PM49YlUdnNZGN3zlQ3HnKpTT2Nf6WPEPuPP_ZyH37eh.eyJE8Rw930nGgPXjJFKD0LHFqyaEg1yEFxTCGBTWiI9aPsWdrg4iR_DLit6QOeUN7I_Qgm3Wrl5udWmh3n3Gy-x5UCbuuEWnVugOJH0.pH9QMElnn4DhIkvdaVxRaa_g12E3tfV4LSTgXI7WWjs6BtdPu8l6GL5s3

Detector: monkeylearn_monkeylearn_test.go
  validPattern: 39b75e2230941948df43ecc2a05feb437a2a367d
  invalidPattern: 39b75e2230941948df43ecc2a05feb437a2a367

Detector: moonclerk_moonclerk_test.go
  validPattern: xku7x4a3ow1a0yg3m36pxzx3nugmonep
  invalidPattern: xku7x4a3ow1a0yg3m36pxzx3nugmone

Detector: moosend_moosend_test.go
  validPattern: 444b05A5-3c4f-cd9c-26df-21eac3f8907a
  invalidPattern: 444b05A5-3c4f-cd9c-26df-21eac3f8907

Detector: moralis_moralis_test.go
  validPattern: uJ2RJISEAWJhMoHWazNYaB8LDSsZwhirg9OvNtZG7eBsep7ySAsHeDCD1Fy64pxU
  invalidPattern: uJ2RJISEAWJhMoHWazNYaB8LDSsZwhirg9OvNtZG7eBsep7ySAsHeDCD1Fy64px

Detector: myintervals_myintervals_test.go
  validPattern: rb1nz5xhues
  invalidPattern: rb1nz5xhue

Detector: nvapi_nvapi_test.go
  testPatterns:
    input: nvapi_token = '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'
    want: "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"

Detector: onedesk_onedesk_test.go
  validPattern: abc123!@#^()def456GHijk$% / testuser1005@example.com
  invalidPattern: abcde/testing@go

Detector: onfleet_onfleet_test.go
  testPatterns:
    input: onfleet_token = 'fhyki1ktfg7upk93qmzm424mn8p3tbm1'
    want: "fhyki1ktfg7upk93qmzm424mn8p3tbm1"

Detector: openai_openai_test.go
  testPatterns:
    input: openai.api-key: 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
    want: "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"
    input: OPENAI_API_KEY =
    want: "sk-proj-mpjtr05CFsJqs4TAeKlCT3BlbkFJsh1KtN0SUjTPeJiagE8K"
    input: OPENAI_API_KEY =
    want: "sk-service-account-name-Ofbtr05CFsJqs4TAeKlCT3BlbkFJsh1KtN0SUjTPeJiaglyC"
    input: 
    want: "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"
    input: OPENAI_API_KEY =
    want: "sk-svcacct-IUXtc5gIZK-2cBfB-nTgEWbD8mi-fi-gc20oGtq8ve51sET3BlbkFJCg8iQkCVz_nmE_q1dCWlMpemoaoMqHzQ6D-FnWGqlz4C8A"

Detector: pagarme_pagarme_test.go
  testPatterns:
    input: pagarme_token = 'ak_live_ubMaiZa2EwqPZXC3wN0ezZtiCl1Hep'
    want: "ak_live_ubMaiZa2EwqPZXC3wN0ezZtiCl1Hep"

Detector: pypi_pypi_test.go
  testPatterns:
    input: pypi_token = 'pypi-AgEIcHlwaS5vcmcCJDQyM2M0Yjg4LWUyNDnnnnhhMy1hNigyLWI2ZWUyMTMwYzI2MgACKlszLCJhOWQwMWE0MS01Nzk4LTQyOWYtOTk4MS1lYzE5NTJhM2E3YzgiXQAABiBeGtDnnnnnV32VpiyeU-YUDKplSv0E5ngmwsnHaV2jGg'
    want: "pypi-AgEIcHlwaS5vcmcCJDQyM2M0Yjg4LWUyNDnnnnhhMy1hNigyLWI2ZWUyMTMwYzI2MgACKlszLCJhOWQwMWE0MS01Nzk4LTQyOWYtOTk4MS1lYzE5NTJhM2E3YzgiXQAABiBeGtDnnnnnV32VpiyeU-YUDKplSv0E5ngmwsnHaV2jGg"

Detector: railwayapp_railwayapp_test.go
  testPatterns:
    input: railwayapp token = 'a52a85d1-33c4-4808-8fa0-c375f3c6013a'
    want: "a52a85d1-33c4-4808-8fa0-c375f3c6013a"
    input: railway = 'a52a85d1-33c4-4808-8fa0-c375f3c6013a'
    want: "a52a85d1-33c4-4808-8fa0-c375f3c6013a"
    input: railwayapp token = 'a52a85d1-33c4-4808-8fa0-c375f3c6013a | a52a85d1-33c4-4808-8fa0-c375f3c6013a'
    want: "a52a85d1-33c4-4808-8fa0-c375f3c6013a"
    input: railway = 'a52e95g1-33c4-4808-8fa0-b375f3c6013a'
    want: 

Detector: saladcloudapikey_saladcloudapikey_test.go
  testPatterns:
    input: api_key = 'salad_cloud_org_zYLYVpmHJ3oksnZ0l9RHJCf1ib2QvJOJztWukwYjtjB1kDIGP'
    want: "salad_cloud_org_zYLYVpmHJ3oksnZ0l9RHJCf1ib2QvJOJztWukwYjtjB1kDIGP"
    input: api_key = 'salad_cloud_user_HZdqHUSBFLJI7LZjo1UcDORHIdi8wet37OMP01YTep82tdimF'
    want: "salad_cloud_user_HZdqHUSBFLJI7LZjo1UcDORHIdi8wet37OMP01YTep82tdimF"

Detector: satismeterprojectkey_satismeterprojectkey_test.go
  validPattern: satismeter_key = satismeter12345678901234 
		satismeter_email = satismeter@example.com 
		satismeter_pass = satismeterSecureP@ss123
  invalidPattern: abcde/testing@go

Detector: slackwebhook_slackwebhook_test.go
  validPattern: https://hooks.slack.com/services/TAGGINGEXAMPLE/BASE/91nziTEEzAAcaNZiz1mPPoXyS
  invalidPattern: https://hooks.slack.com/apps/LAGGINGEXAMPLE/BASE/91nziTEEzAAcaNZiz1mPPoXyS

Detector: snykkey_snykkey_test.go
  testPatterns:
    input: set NODE_REQUIRED_VERSION=12.13.1
set SNYK_API_TOKEN=885953dc-2469-443c-983d-5243d2d54116

set PATH=%PATH%;C:\Program Files\nodejs\;C:\Program Files\Git\cmd
    want: "885953dc-2469-443c-983d-5243d2d54116"

Detector: sumologickey_sumologickey_test.go
  testPatterns:
    input: sumologic:
  accessId: suDkVYKjXZAwsz
  accessKey: Khk3i2ugMxMgkb8bIA2auj4I8juZ3HiimDNssjzYdGqfizPZcxHK70a0LckgRSCL
  clusterName: Kubernetes_cluster-2024-10-25T21:34:23.096Z
    want: `{"accessId":"suDkVYKjXZAwsz","accessKey":"Khk3i2ugMxMgkb8bIA2auj4I8juZ3HiimDNssjzYdGqfizPZcxHK70a0LckgRSCL"
    input: sumologic:
  baseUrl: api.us2.sumologic.com
  accessId: suDkVYKjXZAwsz
  accessKey: Khk3i2ugMxMgkb8bIA2auj4I8juZ3HiimDNssjzYdGqfizPZcxHK70a0LckgRSCL
  clusterName: Kubernetes_cluster-2024-10-25T21:34:23.096Z
    want: `{"accessId":"suDkVYKjXZAwsz","accessKey":"Khk3i2ugMxMgkb8bIA2auj4I8juZ3HiimDNssjzYdGqfizPZcxHK70a0LckgRSCL","url":"api.us2.sumologic.com"
    input: sumoId1 = 'suaRYt6iLL8cxl'
sumoKey1 = 'CzrMhR8zzy1eH1F0XlY1tu5ywqa2yaSFoWGg2cqE43XkfnUVCytnPQfv1enUYrzv'
sumoId2 = 'suDkVYKjXZBwsz'
sumoKey2 = 'Khk3i2ugMxMgkb8bIA2auj4I8juZ3HiimDNssjzYdGqfizPZcxHK21a0LckgRSCL'
    want: "CzrMhR8zzy1eH1F0XlY1tu5ywqa2yaSFoWGg2cqE43XkfnUVCytnPQfv1enUYrzv", "Khk3i2ugMxMgkb8bIA2auj4I8juZ3HiimDNssjzYdGqfizPZcxHK21a0LckgRSCL"
    input: sumoId = 'doDkVYKjXZAwsz'
    want: 

Detector: verifier_verifier_test.go
  validPattern: verifier_key = abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890 
		verifier_email = verifiertest@example.com
  invalidPattern: abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890

Detector: weightsandbiases_weightsandbiases_test.go
  testPatterns:
    input: WANDB_API_KEY = 'eedf1c984f6b995ec40ecc6658356044847ffb31'
    want: "eedf1c984f6b995ec40ecc6658356044847ffb31"
    input: WANDB_API_KEY = 'eedf1c984f6b995ec40ecc6658356044847ffb31'
WANDB_API_KEY= 'eedf1c984f6b995ec40ecc6658356044847ffb32'
    want: "eedf1c984f6b995ec40ecc6658356044847ffb31", "eedf1c984f6b995ec40ecc6658356044847ffb32"
    input: WANDB_API_KEY = 'e84f6b995ec40ecc6658356044847ffb31'
    want: 

Detector: zipapi_zipapi_test.go
  validPattern: zipapi_key = zipapiabcdef1234567890abcdef1234 
		zipapi_email = zipapi_user@example.com
		zipapi_pass = zipapiSecurePass123!
  invalidPattern: abcde/testing@go

Detector: zipbooks_zipbooks_test.go
  validPattern: SecureP@ss123 / admin@secure.com
  invalidPattern: abcde/testing@go

Detector: zohocrm_zohocrm_test.go
  validPattern: 1000.1fa6966eafbb115624baa4103269e50e.e57d155232227b4e41fa7dd2b88dd4d4
  invalidPattern: 1000.24baa4103269e50e.41fa7dd2b88dd4d4

